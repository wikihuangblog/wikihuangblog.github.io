[{"author":null,"categories":null,"content":"Cursor 聊天歷史提取器 這是一個用於提取和整理 Cursor 編輯器聊天歷史記錄的 Python 工具。該工具可以從 Cursor 的本地數據庫中提取聊天記錄，並將其整理成易於閱讀的 Markdown 格式文件。\n功能特點 🔍 自動搜索: 自動在 Cursor 的 workspaceStorage 目錄中搜索聊天數據庫 📊 數據提取: 從 SQLite 數據庫中提取聊天記錄數據 📝 格式化輸出: 將聊天記錄轉換為結構化的 Markdown 格式 📁 智能組織: 按日期和時間自動組織輸出文件夾 🔗 工作區鏈接: 在輸出文件中包含原始工作區路徑的鏈接 📋 日誌記錄: 完整的操作日誌記錄，便於調試和監控 項目結構 app/\r├── main.py # 主程序入口\r├── config/\r│ └── logging_config.py # 日誌配置\r├── libs/\r│ ├── chat_processor.py # 聊天記錄處理器\r│ ├── database_handler.py # 數據庫操作處理器\r│ ├── file_handler.py # 文件操作處理器\r│ └── folder_organizer.py # 文件夾組織器\r├── logs/ # 日誌文件目錄\r├── exportAUTO/ # 自動導出功能\r└── cursor-history.bat # Windows 批處理啟動腳本 安裝要求 Python 3.6+ 無需額外依賴包（使用 Python 標準庫） 使用方法 方法一：使用批處理文件（推薦） # 雙擊運行 cursor-history.bat 方法二：直接運行 Python 腳本 python main.py 配置說明 在 main.py 中可以修改以下路徑配置：\n# Cursor 工作區存儲路徑 root_path = r\u0026amp;#34;C:\\Users\\zero\\AppData\\Roaming\\Cursor\\User\\workspaceStorage\u0026amp;#34; # 處理後文件移動目標路徑 destination_path = r\u0026amp;#34;C:\\Users\\zero\\AppData\\Roaming\\Cursor\\User\\koo\u0026amp;#34; # 聊天記錄輸出基礎路徑 output_base_path = …","date":1761696000,"dir":"post\\code\\00_AIQA\\ch02_cursor\\cursor-history\\","expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":["AIQA"],"kind":"page","lang":"en","lastmod":1761696000,"objectID":"81242a973a6261d38fceab1829892fdb","permalink":"https://wikihuangblog.github.io/post/code/00_aiqa/ch02_cursor/cursor-history/","publishdate":"2025-10-29T00:00:00Z","readingtime":3,"relpermalink":"/post/code/00_aiqa/ch02_cursor/cursor-history/","section":"post","tags":["AIQA"],"title":"cursor-history","type":"post","url":"/post/code/00_aiqa/ch02_cursor/cursor-history/","weight":0,"wordcount":1149},{"author":null,"categories":null,"content":"程式碼同步工具 (Code Sync Tool) 專案概述 這是一個用於處理程式碼文件的 Python 工具，主要功能是將指定目錄下的程式碼文件（如 .java、.py 等）進行結構化整理，為每個程式碼文件創建對應的目錄和 Markdown 文檔。\n主要功能 🔄 自動化處理：批量處理指定目錄下的程式碼文件 📁 目錄結構化：為每個程式碼文件創建對應的目錄 📝 文檔生成：自動生成 .code.md 文件，包含原始程式碼內容 ⏰ 時間戳保持：保持原始文件的創建和修改時間 🛡️ 錯誤處理：完善的異常處理和編碼錯誤處理 🔍 深度限制：支持目錄深度限制，避免過度遞歸 系統需求 Python 3.6+ Windows 系統（使用 Windows API 設置文件時間） 必要的 Python 套件： pywin32 (用於 Windows API 操作) 安裝依賴 pip install pywin32 使用方法 基本用法 python app.py \u0026amp;lt;目標目錄路徑\u0026amp;gt; 範例 # 處理當前目錄下的 target 文件夾 python app.py target # 處理指定路徑的目錄 python app.py \u0026amp;#34;C:\\path\\to\\your\\code\\directory\u0026amp;#34; 處理流程 掃描文件：遞歸掃描目標目錄下的所有 .java 文件 創建目錄：為每個程式碼文件創建以文件名命名的目錄 生成文檔：創建 .code.md 文件，包含原始程式碼內容 移動文件：將原始程式碼文件移動到新創建的目錄中 保持時間戳：使用 Windows API 保持原始文件的創建和修改時間 目錄結構 處理前的目錄結構：\ntarget/\r├── 006_下一個更大的數.java\r├── 007_字符串中的單詞數.java\r└── other_code.java 處理後的目錄結構：\ntarget/\r├── 006_下一個更大的數/\r│ ├── 006_下一個更大的數.java\r│ └── 006_下一個更大的數__________{}______.code.md\r├── 007_字符串中的單詞數/\r│ ├── 007_字符串中的單詞數.java\r│ └── 007_字符串中的單詞數__________{}______.code.md\r└── other_code/\r├── …","date":1759881600,"dir":"post\\code\\00_exam---\\syncQQ@@flow\\book-code-to-doubao-lnk-sync\\","expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"597d24e877713b1653c39b7c6ee0fda3","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/syncqq@@flow/book-code-to-doubao-lnk-sync/","publishdate":"2025-10-08T00:00:00Z","readingtime":3,"relpermalink":"/post/code/00_exam---/syncqq@@flow/book-code-to-doubao-lnk-sync/","section":"post","tags":["exam---"],"title":"book-code-to-doubao-lnk-sync","type":"post","url":"/post/code/00_exam---/syncqq@@flow/book-code-to-doubao-lnk-sync/","weight":0,"wordcount":1048},{"author":null,"categories":null,"content":"手機截圖合併工具 這是一個用於自動合併手機截圖的 Python 工具，可以將多張手機截圖裁切並水平合併成一張圖片。\n功能特色 自動識別並處理以 Screenshot_ 開頭的 JPG 檔案 自動裁切截圖的上下部分（上方裁切 350 像素，下方裁切 500 像素） 將多張截圖水平合併成一張圖片 與 QQ.jpg 檔案進行最終合併 處理完成後自動清理原始截圖檔案 系統需求 Python 3.x PIL (Pillow) 套件 安裝依賴 pip install Pillow 使用方法 方法一：使用批次檔（推薦） 將所有需要合併的截圖檔案（以 Screenshot_ 開頭）和 QQ.jpg 放在同一個資料夾中 雙擊執行 00_phone-pic-combine.bat 程式會自動處理並生成 00_merge.jpg 方法二：直接執行 Python 腳本 python app.py \u0026amp;#34;資料夾路徑\u0026amp;#34; 例如：\npython app.py \u0026amp;#34;C:\\Users\\YourName\\Pictures\\Screenshots\u0026amp;#34; 檔案結構 app/\r├── app.py # 主要程式檔案\r├── 00_phone-pic-combine.bat # 批次執行檔\r├── README.md # 說明文檔\r├── issue.txt # 開發記錄\r└── backupppp/ # 備份資料夾\r├── 00_merge.jpg\r├── QQ.jpg\r└── Screenshot_*.jpg 處理流程 檔案識別：掃描指定資料夾中所有以 Screenshot_ 開頭的 JPG 檔案 排序處理：按檔案名稱升序排列 圖片裁切：每張截圖裁切上方 350 像素和下方 500 像素 第一次合併：將所有裁切後的截圖水平合併成 00_merge.jpg 最終合併：將 QQ.jpg 與 00_merge.jpg 合併 清理檔案：刪除所有原始 Screenshot_ 開頭的檔案 輸出結果 生成檔案：00_merge.jpg（包含 QQ.jpg 和所有截圖的合併結果） 自動清理：刪除所有原始截圖檔案 注意事項 確保資料夾中包含 QQ.jpg 檔案 截圖檔案必須以 Screenshot_ 開頭 程式會自動覆蓋已存在的 00_merge.jpg …","date":1759881600,"dir":"post\\code\\00_exam---\\syncQQ@@flow\\combinephonepic\\","expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"95bd5ea9a3e00d2eda221be436b501e0","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/syncqq@@flow/combinephonepic/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/syncqq@@flow/combinephonepic/","section":"post","tags":["exam---"],"title":"combinephonepic","type":"post","url":"/post/code/00_exam---/syncqq@@flow/combinephonepic/","weight":0,"wordcount":605},{"author":null,"categories":null,"content":"考試日期爬蟲工具 這是一個用於爬取考試資訊並自動創建 .url 快捷方式的 Python 工具。\n功能特色 🎯 自動爬取考試日期資訊 📁 自動創建 .url 快捷方式檔案 🏷️ 智能檔案命名：[考試日期] 考試名稱 🚀 使用 Playwright 進行網頁爬取 ⚡ 異步處理，提高效率 專案結構 app/\r├── app.py # 主要爬蟲程式\r├── exam_urls/ # 輸出目錄（存放 .url 檔案）\r├── ref/ # 參考資料\r│ ├── all.html # 參考網頁\r│ └── crawl-tasker-ref.py # 參考爬蟲程式\r└── README.md # 說明文件 系統需求 Python 3.7+ Playwright 網路連線 安裝步驟 安裝 Python 依賴套件\npip install playwright 安裝 Playwright 瀏覽器\nplaywright install chromium 使用方法 執行爬蟲程式\npython app.py 程式執行流程\n自動訪問考試網站 爬取左側選單中的所有考試連結 逐一訪問每個考試詳細頁面 提取考試日期資訊 創建格式為 [考試日期] 考試名稱.url 的快捷方式檔案 將所有 .url 檔案保存到 exam_urls/ 目錄 輸出格式 程式會在 exam_urls/ 目錄中創建 .url 檔案，檔案命名格式為：\n[考試日期] 考試名稱.url 例如：\n[2024/03/15] 高普考試.url [2024/04/20] 地方特考.url 技術細節 主要功能模組 create_url_shortcut(url, title, output_dir)\n創建 .url 快捷方式檔案 自動清理檔案名稱中的非法字元 限制檔案名稱長度 scrape_exam_dates(browser)\n爬取考試日期資訊 使用 Playwright 進行網頁操作 處理異步請求 main()\n主程式入口 管理瀏覽器生命週期 協調整個爬取流程 目標網站 主要網站：https://www.chienhua.com.tw/JobDetail.aspx?Num=8 爬取範圍：左側選單中的所有考試連結 注意事項 程式使用非無頭模式執行，可以看到瀏覽器操作過程 每個請求之間有 0.5 秒延遲，避免對伺服器造成過大負擔 檔案名稱會 …","date":1759881600,"dir":"post\\code\\00_exam---\\exam-date-to-download-Q@@flow\\crawl-exam-date-sidebar\\","expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"4f7f5b41837de59701fbcf5ceb293c7e","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/exam-date-to-download-q@@flow/crawl-exam-date-sidebar/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/exam-date-to-download-q@@flow/crawl-exam-date-sidebar/","section":"post","tags":["exam---"],"title":"crawl-exam-date-sidebar","type":"post","url":"/post/code/00_exam---/exam-date-to-download-q@@flow/crawl-exam-date-sidebar/","weight":0,"wordcount":761},{"author":null,"categories":null,"content":"網頁內容爬取工具 這是一個用於從 HTML 清單文件中提取連結配對，並自動爬取網頁內容保存到本地資料夾的 Python 工具。\n功能描述 解析 output-taipower_combinedTable.html 文件中的連結配對 提取每個 link-group 中的本地路徑（Loc）和線上連結（SEEK） 使用 Playwright 自動化瀏覽器訪問需要登入的網頁 將網頁內容保存到對應的本地資料夾中 支援持久化登入狀態，避免重複登入 系統需求 Python 3.7+ 需要安裝的套件： playwright beautifulsoup4 安裝步驟 安裝 Python 依賴套件： pip install playwright beautifulsoup4 安裝 Playwright 瀏覽器： playwright install chromium 使用方法 確保 output-taipower_combinedTable.html 文件存在於專案根目錄 執行主程式： python app.py 程式會自動開啟瀏覽器視窗，請完成登入（DeepSeek/Doubao 等） 登入完成後，回到終端機按下 Enter 繼續 程式會自動爬取所有連結並保存到對應的本地資料夾 文件結構 app/\r├── app.py # 主程式\r├── output-taipower_combinedTable.html # 連結清單文件\r├── 00_issue.txt # 需求說明文件\r├── .playwright-user-data/ # Playwright 用戶資料夾（自動生成）\r└── README.md # 說明文件 程式功能詳解 主要函數 parse_loc_and_seek_pairs(): 解析 HTML 文件，提取 Loc 和 SEEK 連結配對 ensure_directory(): 確保目標資料夾存在 derive_filename_from_url(): 從 URL 生成安全的檔案名稱 sanitize_to_filename(): 清理文字為安全的檔案名稱 fetch_and_save(): 爬取網頁內容並保存到本地 特色功能 持久化登入狀態: 使用 Playwright 的持久化上下文，登入狀態會被保存 智能檔案命名: 優先使用網頁標題作為檔案名稱，fallback …","date":1759881600,"dir":"post\\code\\00_exam---\\syncQQ@@flow\\crawl-title-file-to-folder\\","expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"e6e01894bd32cad21d8affaa3c335d64","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/syncqq@@flow/crawl-title-file-to-folder/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/syncqq@@flow/crawl-title-file-to-folder/","section":"post","tags":["exam---"],"title":"crawl-title-file-to-folder","type":"post","url":"/post/code/00_exam---/syncqq@@flow/crawl-title-file-to-folder/","weight":0,"wordcount":753},{"author":null,"categories":null,"content":"HTML 文件分割工具 這是一個用於將大型 HTML 文件分割成多個小文件的 Python 工具，特別適用於處理包含題目和章節的 HTML 文件。\n功能特色 🔧 自動識別 HTML 文件中的標題結構（H1 和 H3 標題） 📝 智能文件名清理和格式化 🎯 支援題目編號提取和格式化 📁 自動創建輸出目錄 🌐 支援中文文件名和內容 專案結構 app/\r├── app.py # 主程式文件\r├── book-chapter.html # 輸入的 HTML 文件\r├── memo.markdown # 專案備忘錄\r├── output/ # 輸出目錄\r│ ├── 01.html\r│ ├── 02.html\r│ └── ...\r├── 112-data-info-book-chapter-backup/ # 備份目錄\r│ ├── 112-data-info-book-chapter.html\r│ └── output/ # 備份輸出\r└── README.md # 本文件 安裝需求 Python 版本 Python 3.6 或更高版本 依賴套件 pip install beautifulsoup4 使用方法 1. 準備輸入文件 將要分割的 HTML 文件命名為 book-chapter.html 並放置在專案根目錄。\n2. 執行程式 python app.py 3. 查看結果 分割後的 HTML 文件將保存在 output/ 目錄中，每個文件對應一個章節或題目。\n程式功能說明 主要函數 clean_filename(filename) 清理文件名，移除特殊字符 保留字母、數字和中文字符 將多個連續的 \u0026amp;lsquo;-\u0026amp;rsquo; 替換為單個 \u0026amp;lsquo;-\u0026amp;rsquo; extract_question_number(filename) 提取題目編號 支援 \u0026amp;ldquo;題目-數字\u0026amp;rdquo; 和 \u0026amp;ldquo;數字-題目\u0026amp;rdquo; 兩種格式 format_number(number) 格式化數字，為 1-9 的數字添加前導零 extract_number_prefix(title) 提取標題中的數字前綴 標準化為 \u0026amp;ldquo;x-x-0\u0026amp;rdquo; 格式 split_and_save_html(html_content) 主要分割函數 識別 H1 和 H3 標 …","date":1759881600,"dir":"post\\code\\00_exam---\\D28@2_split-big-data-info\\","expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"2da016396b8d3dc2b9acdb71a592ef43","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/d28@2_split-big-data-info/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/d28@2_split-big-data-info/","section":"post","tags":["exam---"],"title":"D28@2_split-big-data-info","type":"post","url":"/post/code/00_exam---/d28@2_split-big-data-info/","weight":0,"wordcount":869},{"author":null,"categories":null,"content":"考試題目標籤與簡答整合工具 這是一個用於處理考試題目文件的 Python 工具，主要功能是從文件路徑中提取標籤和章節信息，並將對應的簡答內容整合到原始文件中。\n功能概述 本工具主要執行以下操作：\n提取文件路徑標籤：從文件路徑中的 {標籤} 格式提取標籤信息 提取章節信息：從文件路徑中提取 Ch 開頭的章節編號 整合簡答內容：根據題目編號匹配對應的簡答文件，並將內容轉換為 Markdown 格式 添加提示信息：在文件末尾添加標準化的學習提示 項目結構 app/\r├── app.py # 主程序文件\r├── target.txt # 包含待處理文件路徑的文本文件\r├── 112-little-ans/ # 簡答文件目錄（HTML格式）\r│ ├── 1.html\r│ ├── 2.html\r│ └── ...\r├── output/ # 輸出文件目錄\r│ ├── 01.html\r│ ├── 02.html\r│ └── ...\r├── issue.markdown # 項目需求說明\r├── append-tag.md # 標籤追加說明\r└── README.md # 本說明文件 核心功能 1. 標籤提取 從文件路徑中提取 {標籤} 格式的標籤，例如：\n{easyeasy} → 提取 \u0026amp;ldquo;easyeasy\u0026amp;rdquo; {marknote} → 提取 \u0026amp;ldquo;marknote\u0026amp;rdquo; 2. 章節信息提取 從文件路徑中提取章節編號，例如：\nCh01-3資料表示法 → 提取 \u0026amp;ldquo;Ch01-3資料表示法\u0026amp;rdquo; 3. 簡答內容整合 根據題目編號匹配對應的簡答文件 將 HTML 格式的簡答轉換為 Markdown 格式 在原始文件末尾添加簡答內容 4. HTML 轉 Markdown 轉換 支援以下 HTML 標籤的轉換：\n\u0026amp;lt;br\u0026amp;gt; → 換行符 \u0026amp;lt;strong\u0026amp;gt; → **粗體** \u0026amp;lt;li\u0026amp;gt; → - 列表項 \u0026amp;lt;ul\u0026amp;gt; → 移除標籤 使用方法 1. 準備文件 確保以下文件存在：\ntarget.txt：包含待處理的 Markdown 文件路徑列表 112-little-ans/ 目錄：包含對應的簡答 HTML 文件 output/ 目錄：包含對應的輸出文件 2. 運行程序 python app.py 3.  …","date":1759881600,"dir":"post\\code\\00_exam---\\D28@3_get-filename-tag-append-into-final-part-in-content-----\\","expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"02d32df96f9d5af2ba5ff871336f13d7","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/d28@3_get-filename-tag-append-into-final-part-in-content-----/","publishdate":"2025-10-08T00:00:00Z","readingtime":3,"relpermalink":"/post/code/00_exam---/d28@3_get-filename-tag-append-into-final-part-in-content-----/","section":"post","tags":["exam---"],"title":"D28@3_get-filename-tag-append-into-final-part-in-content-----","type":"post","url":"/post/code/00_exam---/d28@3_get-filename-tag-append-into-final-part-in-content-----/","weight":0,"wordcount":1264},{"author":null,"categories":null,"content":"檔案路徑關鍵字提取與統計工具 這是一個用於從檔案路徑中提取大括號內的關鍵字，並生成關鍵字頻率統計圖表的 Python 工具。\n功能特色 🔍 關鍵字提取：從檔案路徑中自動提取大括號 {} 內的關鍵字 📊 頻率統計：統計每個關鍵字的出現頻率 🖼️ 視覺化輸出：生成包含關鍵字頻率表格的圖片檔案 🔄 多關鍵字支援：支援單個檔案路徑中包含多個關鍵字的情況 📝 自動命名：根據提取的關鍵字自動生成輸出檔案名稱 檔案結構 app/\r├── app.py # 主程式檔案\r├── path-with-keyword-in-bracket.txt # 輸入檔案（包含檔案路徑列表）\r├── path-with-keyword-in-bracket-old.txt # 舊版輸入檔案\r├── todo.md # 待辦事項和問題記錄\r├── EaseUS_2024_10_15_10_55_59.jpg # 範例輸出圖片\r└── README.md # 說明文件 安裝需求 Python 套件 pip install Pillow 系統需求 Python 3.6+ Windows 系統（字體路徑設定為 Windows 字體） 使用方法 1. 準備輸入檔案 將包含檔案路徑的列表儲存為 path-with-keyword-in-bracket.txt，每行一個路徑。\n2. 執行程式 python app.py 3. 查看結果 程式會生成一個以 !!00_index_{關鍵字列表}.jpg 格式命名的圖片檔案，包含：\n關鍵字頻率統計表格 按頻率排序的關鍵字列表 視覺化的表格格式 輸入格式範例 單一關鍵字 [v]04_四、請由小至大列出下述函數之複雜度：1000000,_nlogn,_n2__,_(3-2)n__,_.QQ.lvv.{algorithm}.md 多個關鍵字 [v]01_一、matrix-pointer-reverse.QQ.lvv.{matrix,pointer}.md 輸出格式 程式會生成類似以下格式的檔案名稱：\n!!00_index_{algorithm_cloud_code_counter_dict_array_hand_dict_sum_dynamic_html_if_loop_matrix_pointer_matrix}.jpg 程式特色 關鍵字處理 自動識別大括號 {} …","date":1759881600,"dir":"post\\code\\00_exam---\\grouped-path-bracket-extract\\","expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"afe07b399927a213aa541d1b70d24e5e","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/grouped-path-bracket-extract/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/grouped-path-bracket-extract/","section":"post","tags":["exam---"],"title":"grouped-path-bracket-extract","type":"post","url":"/post/code/00_exam---/grouped-path-bracket-extract/","weight":0,"wordcount":947},{"author":null,"categories":null,"content":"HTML 轉 Markdown 工具 這是一個專門用於將 HTML 內容轉換為 Markdown 格式的 Python 工具，特別針對豆包（Doubao）聊天記錄進行優化處理。\n功能特色 HTML 到 Markdown 轉換：使用 BeautifulSoup 和 html2text 庫進行高品質轉換 智能內容處理：自動識別並處理「下一題」等關鍵詞，將其轉換為標題格式 格式清理：移除不必要的 HTML 標籤和樣式，保持內容簡潔 中文支援：完整支援繁體中文和簡體中文內容 代碼塊處理：特別優化代碼標籤的處理，確保代碼格式正確 專案結構 app/\r├── app.py # 主程式文件\r├── input.html # 輸入的 HTML 文件\r├── output.md # 輸出的 Markdown 文件\r├── README.md # 專案說明文件\r├── 00_different-input/ # 不同輸入範例\r│ ├── decimal-to-multi-base/ # 十進制轉多進制範例\r│ └── 程序算法小考官---.doubao.html\r├── 00_version/ # 版本歷史\r│ ├── v1.py # 第一版（空文件）\r│ ├── v2_newQ-translate.py # 第二版（空文件）\r│ └── v3_newQ-as-h3-ok.py # 第三版（完整功能）\r└── split_sections/ # 分割後的章節文件 安裝需求 確保您的系統已安裝以下 Python 套件：\npip install beautifulsoup4 html2text 使用方法 基本使用 將要轉換的 HTML 文件命名為 input.html 並放在專案根目錄 執行主程式： python app.py 轉換完成後，結果將保存在 output.md 文件中 自定義輸入輸出文件 您可以修改 app.py 中的文件路徑：\nif __name__ == \u0026amp;#34;__main__\u0026amp;#34;: input_file = \u0026amp;#34;your_input.html\u0026amp;#34; # 修改輸入文件名 output_file = \u0026amp;#34;your_output.md\u0026amp;#34; # 修改輸出文件名 main(input_file, output_file) print(f\u0026amp;#34;轉換 …","date":1759881600,"dir":"post\\code\\00_exam---\\syncQQ@@flow\\html-to-md-nextQQ-split\\","expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"4dd381f7520948b7d17a2eb5621facab","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/syncqq@@flow/html-to-md-nextqq-split/","publishdate":"2025-10-08T00:00:00Z","readingtime":3,"relpermalink":"/post/code/00_exam---/syncqq@@flow/html-to-md-nextqq-split/","section":"post","tags":["exam---"],"title":"html-to-md-nextQQ-split","type":"post","url":"/post/code/00_exam---/syncqq@@flow/html-to-md-nextqq-split/","weight":0,"wordcount":1221},{"author":null,"categories":null,"content":"HTML 轉 PDF/Markdown 轉換工具 這是一個 Python 工具，可以將 HTML 檔案批量轉換為 PDF 和 Markdown 格式。\n功能特色 🔄 批量轉換 HTML 檔案為 PDF 和 Markdown 格式 📁 支援目錄結構處理（最多處理 2 層子目錄） 🎨 自定義 CSS 樣式，優化 PDF 輸出格式 📄 支援 B5 頁面大小，最小邊距設定 🚀 簡單易用的批次執行腳本 系統需求 Python 套件 pip install pdfkit html2text weasyprint markdown 外部工具 wkhtmltopdf: 用於 HTML 轉 PDF 轉換 下載地址: https://wkhtmltopdf.org/downloads.html 預設安裝路徑: C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltopdf.exe 檔案結構 app/\r├── app.py # 主要轉換程式（使用 pdfkit）\r├── app2md.py # 替代轉換程式（使用 weasyprint）\r├── custom.css # 自定義 CSS 樣式檔案\r├── run.bat # Windows 批次執行腳本\r├── issue.txt # 專案說明\r├── target/ # HTML 檔案輸入目錄\r├── target---1/ # 備用輸入目錄\r├── target-ori/ # 原始檔案目錄\r└── output_pdf/ # 輸出目錄（自動建立） 使用方法 方法一：使用批次腳本（推薦） # 在 Windows 上直接執行 run.bat 方法二：直接執行 Python 程式 # 使用 app.py（pdfkit 版本） python app.py target # 使用 app2md.py（weasyprint 版本） python app2md.py 程式說明 app.py 使用 pdfkit 和 wkhtmltopdf 進行轉換 支援自定義 CSS 樣式 設定 B5 頁面大小，最小邊距 同時產生 PDF 和 Markdown 檔案 app2md.py 使用 weasyprint 進行轉換 先將 HTML 轉為 Markdown，再轉為 PDF 支援 A4 頁面大小 內建 CSS 樣式 輸出設定 PDF 設 …","date":1759881600,"dir":"post\\code\\00_exam---\\pdf-mindmap-@@flow\\html-to-md-to-pdf\\","expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"5384d3eb3d001a0d229792e0d47a44f7","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/pdf-mindmap-@@flow/html-to-md-to-pdf/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/pdf-mindmap-@@flow/html-to-md-to-pdf/","section":"post","tags":["exam---"],"title":"html-to-md-to-pdf","type":"post","url":"/post/code/00_exam---/pdf-mindmap-@@flow/html-to-md-to-pdf/","weight":0,"wordcount":775},{"author":null,"categories":null,"content":"Markdown 圖片提取工具 這是一個用於從 Markdown 文件中提取圖片並下載保存的 Python 工具。\n功能特點 🔍 自動掃描指定目錄下的所有 Markdown 文件 📥 提取 Markdown 文件中的圖片鏈接 💾 自動下載並保存圖片到本地 🌐 支持相對路徑和絕對路徑的圖片鏈接 📁 遞歸處理子目錄 🛡️ 自動處理文件名中的非法字符 🖼️ 統一將圖片保存為 JPG 格式 安裝要求 確保您的系統已安裝 Python 3.6 或更高版本，並安裝以下依賴包：\npip install requests 使用方法 命令行使用 python app.py \u0026amp;lt;根目錄路徑\u0026amp;gt; 使用示例 # 處理當前目錄下的所有 Markdown 文件 python app.py . # 處理指定目錄下的所有 Markdown 文件 python app.py /path/to/your/markdown/files 工作原理 掃描目錄：程序會掃描指定根目錄下的所有子目錄 查找 Markdown 文件：在每個目錄中查找 .md 文件 提取圖片鏈接：使用正則表達式 !\\[.*?\\]\\((.*?)\\) 提取 Markdown 中的圖片鏈接 處理 URL： 將相對路徑轉換為絕對路徑 移除查詢參數和錨點 統一文件名格式 下載保存：下載圖片並保存到對應的目錄中 文件結構 project/\r├── app.py # 主程序文件\r├── README.md # 說明文檔\r└── your_md_files/ # 您的 Markdown 文件目錄\r├── file1.md\r├── file2.md\r└── images/ # 提取的圖片將保存在這裡 注意事項 程序會將所有提取的圖片統一保存為 .jpg 格式 如果圖片文件名包含非法字符，會自動替換為下劃線 程序會自動創建必要的目錄結構 如果圖片下載失敗，會在控制台顯示錯誤信息 錯誤處理 如果未提供根目錄路徑參數，程序會顯示錯誤信息並退出 如果圖片下載失敗（HTTP 狀態碼非 200），會跳過該圖片並繼續處理其他圖片 程序會自動處理文件名中的特殊字符，確保文件可以正常保存 自定義配置 如果需要修改基礎 URL（用於處理相對路徑），請編輯 app.py 文件中的第 19 行：\nbase_url = …","date":1759881600,"dir":"post\\code\\00_exam---\\md-extract-jpg\\","expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"e24ad43f8a03849343b1c7b24abd9252","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/md-extract-jpg/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/md-extract-jpg/","section":"post","tags":["exam---"],"title":"md-extract-jpg","type":"post","url":"/post/code/00_exam---/md-extract-jpg/","weight":0,"wordcount":661},{"author":null,"categories":null,"content":"Markdown 大綱提取工具 這是一個用於從多個 Markdown 檔案中提取標題並生成大綱的 Python 工具。該工具可以讀取多個 Markdown 檔案，提取其中的三級標題（###），並生成一個統一的目錄大綱，同時輸出為 Markdown 檔案和 PNG 圖片。\n功能特色 📁 從 input.txt 讀取多個 Markdown 檔案路徑 📝 提取每個檔案中的三級標題（###） 📋 生成統一的目錄大綱 💾 輸出為 Markdown 檔案（outline.md） 🖼️ 輸出為 PNG 圖片（outline.png） 🎨 自動套用美觀的 CSS 樣式 系統需求 Python 3.6+ Chrome 瀏覽器 ChromeDriver（需要與 Chrome 版本匹配） 安裝依賴 pip install selenium markdown2 使用方法 1. 準備輸入檔案 在專案根目錄創建 input.txt 檔案，每行包含一個 Markdown 檔案的完整路徑：\nD:\\00_EXAM\\00_dateExam\\02\\twport\\00_target\\112年度\\program\\112_資訊_資料結構與程式設計.markdown\rD:\\00_EXAM\\00_dateExam\\02\\twport\\00_target\\112年度\\security\\112.markdown\rD:\\00_EXAM\\00_dateExam\\02\\twport\\00_target\\112年度\\article\\memo.markdown 2. 執行程式 python app.py 3. 查看輸出 程式執行完成後，會生成以下檔案：\noutline.md - 包含提取的大綱內容 outline.png - 大綱的視覺化圖片 檔案結構 app/\r├── app.py # 主程式檔案\r├── input.txt # 輸入檔案路徑列表\r├── outline.md # 輸出的大綱 Markdown 檔案\r├── outline.png # 輸出的大綱圖片\r├── 00_issue/ # 問題記錄目錄\r│ └── issue.markdown # 問題說明檔案\r└── 00_version/ # 版本記錄目錄\r└── app___original___.lnk …","date":1759881600,"dir":"post\\code\\00_exam---\\big-md-to-part@@flow\\md-extract-toc-for-exam-write-outline\\","expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"7998ac01e0cc1f537c76c1ec9fca8201","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/big-md-to-part@@flow/md-extract-toc-for-exam-write-outline/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/big-md-to-part@@flow/md-extract-toc-for-exam-write-outline/","section":"post","tags":["exam---"],"title":"md-extract-toc-for-exam-write-outline","type":"post","url":"/post/code/00_exam---/big-md-to-part@@flow/md-extract-toc-for-exam-write-outline/","weight":0,"wordcount":927},{"author":null,"categories":null,"content":"HTML 合併工具 這是一個用於合併 HTML 文件的 Python 工具，專門設計用於處理 YAMOL 問答系統的 HTML 文件。\n功能描述 此工具可以自動合併兩個 HTML 文件：\n來源文件：包含問題內容的 HTML 文件（*.html，排除 .aiqa.html） 目標文件：包含 AI 答案的 HTML 文件（*.aiqa.html） 合併後會將來源文件中的問題內容插入到目標文件的開頭，並自動刪除原始文件。\n專案結構 app/\r├── app.py # 主要執行文件（最新版本）\r├── go.bat # Windows 批次執行檔\r└── 00_version/ # 版本歷史\r├── v1_with-name-merge-ok.py\r├── v2_any-extension-match.py\r├── v3_prefix-into-new-merge-filename.py\r├── v4_only-combine-ans.py\r└── v5_merge-from-group.py 版本演進 v1 - 基礎合併功能 固定文件名合併（xxx.html + target.aiqa.html） 基本的 HTML 解析和合併 v2 - 動態文件匹配 支援任意 .html 文件作為來源 支援任意 .aiqa.html 文件作為目標 自動文件發現功能 v3 - 前綴提取功能 從來源文件名提取數字前綴 將前綴添加到合併後的文件名 自動刪除原始文件 v4 - 精確內容提取 只提取 \u0026amp;lt;a class=\u0026amp;quot;no-tw\u0026amp;quot;\u0026amp;gt; 元素 更精確的內容選擇 v5 - 群組處理 支援處理整個目錄結構 批量處理多個子目錄 最新版本 (app.py) 完整的目錄遞歸處理 錯誤處理和日誌記錄 支援多層目錄結構 安裝需求 pip install beautifulsoup4 使用方法 方法一：使用批次檔（Windows） go.bat 方法二：直接執行 Python python app.py \u0026amp;#34;目標目錄路徑\u0026amp;#34; 使用範例 # 處理單一目錄 python app.py \u0026amp;#34;C:\\path\\to\\your\\folder\u0026amp;#34; # 處理包含多個子目錄的根目錄 python app.py \u0026amp;#34;C:\\path\\to\\root\\folder\u0026amp;#34; 工 …","date":1759881600,"dir":"post\\code\\00_exam---\\merge-yamol-Q-ai-ans\\","expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"3dcfb33ff3468452199dce6a3a20279f","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/merge-yamol-q-ai-ans/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/merge-yamol-q-ai-ans/","section":"post","tags":["exam---"],"title":"merge-yamol-Q-ai-ans","type":"post","url":"/post/code/00_exam---/merge-yamol-q-ai-ans/","weight":0,"wordcount":927},{"author":null,"categories":null,"content":"考試題目分類移動工具 這是一個用於自動將考試題目根據題目前綴分類並移動到對應資料夾的 Python 工具。\n功能說明 本工具會讀取 category.txt 檔案中的分類對應表，然後掃描指定目錄中的所有資料夾，根據資料夾名稱的前兩位數字（題號）將資料夾移動到對應的課程類別資料夾中。\n檔案結構 app/\r├── app.py # 主程式檔案\r├── asset/\r│ └── category.txt # 題目分類對應表\r└── README.md # 說明文件 使用方法 1. 準備工作 確保您的目錄結構如下：\n根目錄包含 category.txt 檔案 根目錄包含需要分類的題目資料夾（例如：01_題目名稱、02_題目名稱 等） 2. 執行指令 python app.py \u0026amp;lt;根目錄路徑\u0026amp;gt; 例如：\npython app.py \u0026amp;#34;E:\\exam\\questions\u0026amp;#34; 3. 執行結果 程式會：\n讀取 category.txt 檔案建立分類對應表 掃描根目錄中的所有資料夾 根據資料夾名稱的前兩位數字查找對應的課程類別 創建課程類別資料夾（如果不存在） 將題目資料夾移動到對應的課程類別資料夾中 category.txt 檔案格式 檔案格式為 Tab 分隔的文字檔，第一行為標題行（會被跳過），後續每行包含：\n題號（1-40） 課程類別名稱 關鍵字（可選） 範例：\n題號\t課程類別\t關鍵字\r1\t計算機架構 (Computer Architecture)\tRISC、指令集、處理器設計策略\r2\t記憶體系統 (Memory Systems)\t存取速度、快取記憶體、主記憶體\r... 支援的課程類別 目前支援以下課程類別：\n計算機架構 (Computer Architecture) 記憶體系統 (Memory Systems) 作業系統 (Operating Systems) 數位邏輯設計 (Digital Logic Design) 網頁設計 (Web Design) 數位訊號處理 (Digital Signal Processing) 計算機網路 (Computer Networks) 資料結構 (Data Structures) 演算法 (Algorithms) 程式設計 (Programming) 行銷 (Marketing) …","date":1759881600,"dir":"post\\code\\00_exam---\\000_move-prefix\\move-exam-Q-by-prefix-to-group\\","expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"84ac2724f5b4cb2b34539160cd719dce","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/000_move-prefix/move-exam-q-by-prefix-to-group/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/000_move-prefix/move-exam-q-by-prefix-to-group/","section":"post","tags":["exam---"],"title":"move-exam-Q-by-prefix-to-group","type":"post","url":"/post/code/00_exam---/000_move-prefix/move-exam-q-by-prefix-to-group/","weight":0,"wordcount":878},{"author":null,"categories":null,"content":"OneNote 影片目錄轉 URL 工具 這是一個 Python 工具，用於將 OneNote 影片目錄（Markdown 格式）轉換為資料夾結構和 URL 檔案，方便下載和管理影片資源。\n功能特色 📁 自動創建資料夾結構 🔗 生成 .url 檔案，快速訪問影片連結 🧹 自動清理不合法的資料夾名稱 📝 支援 Markdown 格式的目錄檔案 🎯 專門針對考試影片資源優化 系統需求 Python 3.6 或更高版本 Windows 作業系統（支援 .url 檔案） 安裝與使用 方法一：使用批次檔（推薦） 將您的 Markdown 目錄檔案放在專案目錄中 執行批次檔： go.bat your_toc_file.md 方法二：直接使用 Python 開啟命令提示字元或 PowerShell 執行以下命令： python app.py your_toc_file.md 支援的目錄格式 工具支援以下 Markdown 格式：\n有 URL 連結的格式 - [113年度](https://example.com/video1) - [112年度](https://example.com/video2) 純文字格式 - 113年度影片 - 112年度影片 行號格式（自動處理） 1||- [113年度](https://example.com/video1) 2||- [112年度](https://example.com/video2) 輸出結果 執行後會在 output 資料夾中生成：\noutput/\r├── 113年度/\r│ └── 113年度.url\r├── 112年度/\r│ └── 112年度.url\r└── 111年度/\r└── 111年度.url 內建範例檔案 專案包含以下範例目錄檔案：\ntoc_postoffice.md - 郵局考試影片目錄 toc_twport.md - 台灣港務公司考試影片目錄 toc-mrt.md - 台北捷運考試影片目錄 memo.md - 備忘錄和筆記 使用範例 處理郵局考試影片目錄 python app.py toc_postoffice.md 處理港務公司考試影片目錄 python app.py toc_twport.md 處理捷運考試影片目錄 python app.py toc-mrt.md 資料夾名稱清理規則 工具會自動清理資料夾名 …","date":1759881600,"dir":"post\\code\\00_exam---\\exam-date-to-download-Q@@flow\\onenote-video-toc-to-url\\","expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"7b73616ac7195e9a8cfdf4a6b022b49e","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/exam-date-to-download-q@@flow/onenote-video-toc-to-url/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/exam-date-to-download-q@@flow/onenote-video-toc-to-url/","section":"post","tags":["exam---"],"title":"onenote-video-toc-to-url","type":"post","url":"/post/code/00_exam---/exam-date-to-download-q@@flow/onenote-video-toc-to-url/","weight":0,"wordcount":899},{"author":null,"categories":null,"content":"郵局連結群組管理工具 (Post Office Link Group Manager) 這是一個用於管理和組織 Windows 捷徑檔案的 Python 工具，特別適用於整理考試資料、學習資源和各種文件連結。\n功能特色 🔗 自動建立捷徑: 從路徑清單自動建立 Windows .lnk 捷徑檔案 📁 智能分類: 自動為每個捷徑建立編號前綴和對應資料夾 📊 HTML 報表: 生成包含所有連結的 HTML 表格報表 🗂️ 多種輸出格式: 支援不同主題和分類的輸出目錄 📝 詳細日誌: 完整的錯誤記錄和處理狀態追蹤 專案結構 app/\r├── app.py # 主要程式檔案\r├── path.txt # 路徑清單檔案\r├── requirements.txt # Python 依賴套件\r├── alllnk/ # 原始連結檔案\r├── output/ # 預設輸出目錄\r├── output-chinese/ # 中文內容輸出\r├── output-network/ # 網路相關輸出\r├── output-post/ # 郵局相關輸出\r├── output-postoffice/ # 郵局考試輸出\r├── output-program-normal/ # 程式設計一般輸出\r├── output-taipower/ # 台電相關輸出\r├── output-ttt/ # TTT 相關輸出\r├── output-twport/ # 台灣港務輸出\r├── output-v1/ # 版本 1 輸出\r└── 00_version/ # 版本歷史檔案 安裝需求 系統需求 Windows 作業系統 Python 3.6 或更高版本 依賴套件 pip install -r requirements.txt 主要依賴：\npywin32==306 - Windows COM 物件支援 使用方法 1. 準備路徑清單 在 path.txt 檔案中輸入要建立捷徑的檔案或資料夾路徑，每行一個路徑：\nD:\\path\\to\\file1.txt\rD:\\path\\to\\folder1\rD:\\path\\to\\file2.pdf 2. 執行程式 python app.py 3. 查看結果 程式執行完成後，會在 output 目錄中生成：\n編號資料夾（01_、02_、03_\u0026amp;hellip;） …","date":1759881600,"dir":"post\\code\\00_exam---\\syncQQ@@flow\\post-office-lnk-group\\","expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"6546a387371bd7c1c453665a59b255ac","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/syncqq@@flow/post-office-lnk-group/","publishdate":"2025-10-08T00:00:00Z","readingtime":3,"relpermalink":"/post/code/00_exam---/syncqq@@flow/post-office-lnk-group/","section":"post","tags":["exam---"],"title":"post-office-lnk-group","type":"post","url":"/post/code/00_exam---/syncqq@@flow/post-office-lnk-group/","weight":0,"wordcount":1043},{"author":null,"categories":null,"content":"資料夾重命名工具 這是一個用於根據關鍵字和章節資訊自動重新命名資料夾的 Python 應用程式。主要功能是將數字編號的資料夾重新命名為更具描述性的格式，並按照課程類別進行分類整理。\n功能特色 📁 自動讀取 Markdown 格式的章節資訊表 🔄 根據關鍵字和課程類別重新命名資料夾 📊 支援多種資料格式（CSV、Markdown 表格） 🗂️ 自動創建分類資料夾並整理內容 ✅ 包含完整的單元測試 專案結構 app/\r├── app.py # 主要應用程式\r├── test_app.py # 單元測試\r├── bookChapterGroup.md # 章節資訊表（Markdown 格式）\r├── keyword.txt # 關鍵字資料（CSV 格式）\r├── keyword-new.txt # 新版關鍵字資料\r├── go.bat # Windows 批次執行檔\r├── issue.jpg # 問題截圖\r├── issue.markdown # 問題說明文件\r└── README.md # 專案說明文件 安裝需求 Python 套件 pip install pandas 系統需求 Python 3.6 或更高版本 Windows/Linux/macOS 使用方法 1. 準備資料檔案 章節資訊表 (bookChapterGroup.md) Markdown 格式的表格，包含以下欄位：\n序號：題目編號 章節編號：如 Ch05、Ch03-4 等 課程類別：如 機率論、統計學基礎 等 關鍵字：題目相關的關鍵字 關鍵字檔案 (keyword.txt) Tab 分隔的 CSV 檔案，包含：\n题号：題目編號 分类：題目分類 关键字：題目關鍵字 2. 執行應用程式 方法一：使用 Python 直接執行 python app.py \u0026amp;#34;路徑/到/bookChapterGroup.md\u0026amp;#34; 方法二：使用批次檔 (Windows) go.bat 3. 執行測試 python test_app.py 重命名規則 應用程式會將數字編號的資料夾重新命名為以下格式：\n原始格式：\nchapter/\r├── 1/\r├── 2/\r└── 3/ 重命名後：\nchapter/\r├── Ch05機率論/\r│ ├── 01_組合、抽樣、無放回抽樣/\r│ └── 02_條件機率、撲克牌、無放回抽樣/ …","date":1759881600,"dir":"post\\code\\00_exam---\\000_move-prefix\\rename-folder-by-keyword-with-prefix-number\\","expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"4417506cd5904074a76890d17d808c20","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/000_move-prefix/rename-folder-by-keyword-with-prefix-number/","publishdate":"2025-10-08T00:00:00Z","readingtime":3,"relpermalink":"/post/code/00_exam---/000_move-prefix/rename-folder-by-keyword-with-prefix-number/","section":"post","tags":["exam---"],"title":"rename-folder-by-keyword-with-prefix-number","type":"post","url":"/post/code/00_exam---/000_move-prefix/rename-folder-by-keyword-with-prefix-number/","weight":0,"wordcount":1067},{"author":null,"categories":null,"content":"文件夾重命名工具 這是一個 Python 工具，用於根據目錄中的 .aiqa.html 文件自動重命名其父文件夾。\n功能描述 該工具會掃描指定目錄及其子目錄，尋找以 .aiqa.html 結尾的文件，然後使用該文件的名稱（去掉 .aiqa 後綴）來重命名其所在的父文件夾。\n文件結構 app/\r├── app.py # 主要腳本文件\r├── logVersion.py # 帶有日誌記錄和錯誤處理的增強版本\r├── go.bat # Windows 批處理文件，用於快速執行\r├── document.md # 代碼說明文檔\r└── README.md # 本文件 使用方法 方法一：直接運行 Python 腳本 # 使用當前目錄 python app.py # 指定目錄 python app.py /path/to/directory 方法二：使用增強版本（推薦） # 使用增強版本，包含日誌記錄和錯誤處理 python logVersion.py /path/to/directory 方法三：使用 Windows 批處理文件 在 Windows 系統上，您可以雙擊 go.bat 文件，它會自動使用當前目錄作為參數運行腳本。\n工作原理 工具會遞歸掃描指定目錄及其所有子目錄 尋找以 .aiqa.html 結尾的文件 提取文件名（去掉 .aiqa.html 後綴） 將該文件所在的父文件夾重命名為提取的文件名 記錄操作結果 示例 假設您有以下目錄結構：\nproject/\r├── folder1/\r│ └── document.aiqa.html\r├── folder2/\r│ └── report.aiqa.html\r└── folder3/\r└── notes.aiqa.html 運行工具後，目錄結構將變為：\nproject/\r├── document/\r│ └── document.aiqa.html\r├── report/\r│ └── report.aiqa.html\r└── notes/\r└── notes.aiqa.html 安全特性 重複檢查：如果目標文件夾名稱已存在，工具會跳過重命名操作 錯誤處理：包含完整的異常處理機制 日誌記錄：所有操作都會記錄到 folder_rename.log 文件中 詳細輸出：在控制台顯示操作結果 系統要求 Python 3.x …","date":1759881600,"dir":"post\\code\\00_exam---\\rename-parent-as-child-aiqa\\","expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"4fea8aec33d7b45961655ce0cdc62ed5","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/rename-parent-as-child-aiqa/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/rename-parent-as-child-aiqa/","section":"post","tags":["exam---"],"title":"rename-parent-as-child-aiqa","type":"post","url":"/post/code/00_exam---/rename-parent-as-child-aiqa/","weight":0,"wordcount":673},{"author":null,"categories":null,"content":"Simility Name Move 一個基於文件名相似度的智能文件移動工具，用於自動整理和組織 HTML 文件。\n功能概述 這個項目包含兩個主要的 Python 腳本，用於根據文件名相似度自動移動 HTML 文件到相應的目標文件夾：\napp.py - 基於文件夾名稱匹配的移動工具 simility-move.py - 基於 Levenshtein 距離算法的智能相似度匹配工具 文件說明 app.py 功能: 將 HTML 文件移動到名稱以 _{basename} 結尾的目標文件夾 特點: 簡單直接的匹配方式，適合有明確命名規則的文件夾結構 使用場景: 當目標文件夾有固定的命名格式時 simility-move.py 功能: 使用 Levenshtein 距離算法計算文件名與文件夾名的相似度 特點: 智能匹配，相似度閾值為 0.92 使用場景: 當需要更靈活的匹配，或文件名與文件夾名不完全一致時 安裝依賴 pip install python-Levenshtein 使用方法 方法一：使用 app.py 修改腳本中的路徑變量：\nori_html_folder = r\u0026amp;#39;你的原始HTML文件夾路徑\u0026amp;#39; target_base_path = r\u0026amp;#39;你的目標基礎路徑\u0026amp;#39; 運行腳本：\npython app.py 方法二：使用 simility-move.py 修改腳本中的路徑變量：\ntarget_folder = r\u0026amp;#39;你的目標文件夾路徑\u0026amp;#39; ori_html_folder = r\u0026amp;#39;你的原始HTML文件夾路徑\u0026amp;#39; 運行腳本：\npython simility-move.py 核心功能 字符串處理 自動移除文件名中的數字 去除前導空格 提取文件基本名稱 相似度計算 使用 Levenshtein 距離算法 可調整的相似度閾值 智能匹配最佳目標文件夾 文件操作 安全的文件移動操作 重複文件檢測 錯誤處理和日誌記錄 注意事項 備份重要文件: 在運行腳本前，建議備份重要的 HTML 文件 路徑設置: 確保所有路徑變量設置正確 權限檢查: 確保腳本有足夠的權限讀取和移動文件 相似度閾值: 可以根據需要調整 max_similarity 值 錯誤處理 腳本包含完善的錯誤處理機制：\n文件已存在時會跳過移動 移動失敗時會顯示錯誤信息 找不到匹配 …","date":1759881600,"dir":"post\\code\\00_exam---\\simility-name-move\\","expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"6704400c096771bf8e76e00801d22741","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/simility-name-move/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/simility-name-move/","section":"post","tags":["exam---"],"title":"simility-name-move","type":"post","url":"/post/code/00_exam---/simility-name-move/","weight":0,"wordcount":780},{"author":null,"categories":null,"content":"Markdown 文件分割工具 這是一個用於將大型 Markdown 文件按章節分割成小文件的 Python 工具，支援自動添加 YAML front matter、簡體中文轉繁體中文、圖片處理等功能。\n功能特色 📄 智能分割：根據 ### 標題自動分割 Markdown 文件 🏷️ 自動分類：根據內容自動判斷是否為程式碼類型並添加相應標籤 🔤 繁簡轉換：自動將簡體中文轉換為繁體中文 🖼️ 圖片處理：自動複製圖片到對應資料夾並更新路徑 📝 YAML Front Matter：自動生成包含標題、分類、時間等資訊的 YAML 前置資料 📁 結構化輸出：按編號創建子資料夾，便於管理 安裝需求 Python 套件 pip install opencc 系統需求 Python 3.6+ Windows 系統（用於執行 run.bat） 使用方法 方法一：使用批次檔（推薦） run.bat your_file.md 方法二：直接使用 Python python app.py your_file.md 輸出結構 工具會在當前目錄創建 split_sections 資料夾，結構如下：\nsplit_sections/\r├── 00/\r│ ├── 00_章節標題__________{codeQQ}_____.QQ.md\r│ └── pic/ (如果有圖片)\r│ └── image1.png\r├── 01/\r│ ├── 01_另一個章節__________{}_____.QQ.md\r│ └── pic/\r└── ... 檔案命名規則 格式：{編號:02d}_{標題}__________{{分類}}_____.QQ.md 編號：從 00 開始的兩位數編號 標題：從章節標題提取，移除特殊字元但保留 [v] 等標記 分類：根據內容自動判斷 codeQQ：包含程式碼區塊（java、python、c、csharp、javascript、vb、html） 空字串：一般內容 YAML Front Matter 格式 每個分割後的文件會自動添加以下 YAML 前置資料：\n--- title: 章節標題 category: codeQQ # 或空字串 tags: - \u0026amp;#34;codeQQ\u0026amp;#34; # 或空字串 description: keyword: - \u0026amp;#34;codeQQ\u0026amp;#34; # 或空字 …","date":1759881600,"dir":"post\\code\\00_exam---\\big-md-to-part@@flow\\split-exam-as-ditto-clipboard-way\\","expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"d421dc6307ace6233966f850e211e843","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/big-md-to-part@@flow/split-exam-as-ditto-clipboard-way/","publishdate":"2025-10-08T00:00:00Z","readingtime":3,"relpermalink":"/post/code/00_exam---/big-md-to-part@@flow/split-exam-as-ditto-clipboard-way/","section":"post","tags":["exam---"],"title":"split-exam-as-ditto-clipboard-way","type":"post","url":"/post/code/00_exam---/big-md-to-part@@flow/split-exam-as-ditto-clipboard-way/","weight":0,"wordcount":1264},{"author":null,"categories":null,"content":"PDF 水平分割工具 這是一個用於將水平 PDF 文件分割成垂直 PDF 文件的 Python 工具。該工具可以將每個 PDF 頁面從中間水平分割，將原本的橫向頁面轉換為兩個縱向頁面。\n功能特色 🔄 自動將水平 PDF 分割成垂直 PDF 📁 批量處理目標文件夾中的所有 PDF 文件 🛡️ 錯誤處理機制，確保程序穩定性 📦 使用 PyMuPDF (fitz) 庫，提供高質量的 PDF 處理 系統需求 Python 3.6 或更高版本 PyMuPDF 庫 安裝依賴 pip install PyMuPDF 使用方法 方法一：使用批處理文件（推薦） 將要處理的 PDF 文件放入 target 文件夾 雙擊運行 run.bat 文件 處理完成的文件將保存在 target/split_pdfs/ 文件夾中 方法二：直接運行 Python 腳本 python app.py [目標文件夾路徑] 例如：\npython app.py E:\\codeAll\\python\\00_exam---\\pdf-mindmap-@@flow\\split-horizontal-pdf-into-vertial-pdf\\app 文件結構 app/\r├── app.py # 主程序文件\r├── run.bat # Windows 批處理執行文件\r├── issue.txt # 專案說明\r├── target/ # 目標 PDF 文件存放文件夾\r│ ├── *.pdf # 待處理的 PDF 文件\r│ └── split_pdfs/ # 處理後的 PDF 文件輸出文件夾\r└── 00_version/ # 版本歷史文件夾\r├── v1_chinese-pdf-fail;try-print-no-text-version.py # v1 版本（使用 PyPDF2）\r└── v2_PyMuPDF.py # v2 版本（使用 PyMuPDF） 工作原理 讀取 PDF：使用 PyMuPDF 打開目標 PDF 文件 頁面分割：對每一頁進行水平分割 計算頁面中心點位置 創建左半部分和右半部分的矩形區域 將每個部分作為新頁面添加到輸出 PDF 保存結果：將處理後的 PDF 保存到指定文件夾 版本歷史 v1 版本 使用 PyPDF2 庫 在處理中文 PDF 時遇到問題 嘗試使用無文字版本但效果不佳 v2 版本（當前版本）  …","date":1759881600,"dir":"post\\code\\00_exam---\\pdf-mindmap-@@flow\\split-horizontal-pdf-into-vertial-pdf\\","expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"2acecab3757c67d3032c3f6301e00601","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/pdf-mindmap-@@flow/split-horizontal-pdf-into-vertial-pdf/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/pdf-mindmap-@@flow/split-horizontal-pdf-into-vertial-pdf/","section":"post","tags":["exam---"],"title":"split-horizontal-pdf-into-vertial-pdf","type":"post","url":"/post/code/00_exam---/pdf-mindmap-@@flow/split-horizontal-pdf-into-vertial-pdf/","weight":0,"wordcount":752},{"author":null,"categories":null,"content":"統計移動合併工具 (Statistic Move Combine Tool) 這是一個用於自動化文件移動和合併的 Python 工具，可以根據數字前綴匹配源目錄和目標目錄，並將文件從源目錄移動到對應的目標目錄。\n功能特點 🔍 智能匹配: 根據目錄名稱中的數字前綴自動匹配源目錄和目標目錄 📁 遞歸處理: 支持多層目錄結構的遞歸處理 🚀 自動移動: 自動將匹配的文件和目錄從源位置移動到目標位置 📝 詳細日誌: 提供詳細的操作日誌，顯示每個移動操作 系統要求 Python 3.6 或更高版本 Windows 操作系統（路徑配置為 Windows 格式） 安裝 克隆或下載此項目到本地 確保已安裝 Python 3.6+ 使用方法 配置路徑 在運行腳本之前，請修改 app.py 中的路徑配置：\n# 源路徑和目標路徑的基礎目錄 source_base = r\u0026amp;#34;你的源目錄路徑\u0026amp;#34; target_base = r\u0026amp;#34;你的目標目錄路徑\u0026amp;#34; 運行腳本 python app.py 工作原理 目錄掃描: 腳本會遍歷源基礎目錄的所有子目錄 數字前綴提取: 從源目錄名稱中提取數字前綴 目標匹配: 在目標目錄中查找具有相同數字前綴的子目錄 文件移動: 將源目錄中的文件和子目錄移動到匹配的目標目錄 匹配規則 源目錄名稱如 01_folder 會匹配目標目錄中名稱以 01 開頭的子目錄 支持多層目錄結構的遞歸處理 如果找不到匹配的目標目錄，會顯示相應的警告信息 目錄結構示例 源目錄結構:\rsource_base/\r├── subdir1/\r│ ├── 01_source/\r│ └── 02_source/\r└── subdir2/\r├── 03_source/\r└── 04_source/\r目標目錄結構:\rtarget_base/\r├── subdir1/\r│ ├── 01_target/\r│ └── 02_target/\r└── subdir2/\r├── 03_target/\r└── 04_target/ 注意事項 ⚠️ 重要提醒:\n此腳本會實際移動文件，請在運行前備份重要數據 確保目標目錄有足夠的寫入權限 建議先在測試環境中驗證腳本功能 輸出示例 已移動文件: D:\\source\\01_folder\\file1.txt -\u0026amp;gt; …","date":1759881600,"dir":"post\\code\\00_exam---\\00_stastic\\statistic-move-combine-with-yaml\\","expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":["exam---","stastic"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"825d79d5179592e0429f3d2d730d169c","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/00_stastic/statistic-move-combine-with-yaml/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/00_stastic/statistic-move-combine-with-yaml/","section":"post","tags":["exam---","stastic"],"title":"statistic-move-combine-with-yaml","type":"post","url":"/post/code/00_exam---/00_stastic/statistic-move-combine-with-yaml/","weight":0,"wordcount":946},{"author":null,"categories":null,"content":"統計學題目整理工具 這是一個用於整理統計學題目的 Python 工具，可以自動將 HTML 文件移動到對應的資料夾中。\n功能說明 此工具會掃描當前目錄中的所有 HTML 文件，並根據文件名稱的前綴數字，將文件移動到對應的資料夾中。\n工作原理 掃描當前目錄中的所有 HTML 文件 提取文件名稱的前綴數字 尋找以該數字開頭的資料夾（格式：數字_） 將 HTML 文件移動到對應的資料夾中 範例 假設您有以下文件結構：\napp/\r├── 1.html\r├── 2.html\r├── 1_第一章/\r├── 2_第二章/\r└── app.py 執行腳本後：\napp/\r├── 1_第一章/\r│ └── 1.html\r├── 2_第二章/\r│ └── 2.html\r└── app.py 使用方法 確保您的 Python 環境已安裝 將 app.py 放在包含 HTML 文件和對應資料夾的目錄中 在終端機中執行： python app.py 系統需求 Python 3.x 無需額外的第三方套件 注意事項 確保 HTML 文件的名稱以數字開頭 確保對應的資料夾名稱格式為 數字_描述 腳本會直接移動文件，請確保重要文件已備份 如果找不到對應的資料夾，會顯示相應的提示訊息 輸出訊息 已將 [文件名] 移動到 [資料夾名] - 成功移動文件 未找到與 [文件名] 匹配的資料夾 - 找不到對應的資料夾 所有 HTML 檔案處理完成。 - 處理完成 授權 此項目為開源軟體，可自由使用和修改。\n","date":1759881600,"dir":"post\\code\\00_exam---\\00_stastic\\statistic-q-to-yamol\\","expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":["exam---","stastic"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"d03fc7296104c925adf34e9ac7a222ed","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/00_stastic/statistic-q-to-yamol/","publishdate":"2025-10-08T00:00:00Z","readingtime":1,"relpermalink":"/post/code/00_exam---/00_stastic/statistic-q-to-yamol/","section":"post","tags":["exam---","stastic"],"title":"statistic-q-to-yamol","type":"post","url":"/post/code/00_exam---/00_stastic/statistic-q-to-yamol/","weight":0,"wordcount":463},{"author":null,"categories":null,"content":"視窗切換工具 (Window Switch Tool) 這是一個使用 AutoHotkey 腳本開發的視窗切換工具，可以快速在不同視窗之間切換並執行特定操作。\n功能說明 快速視窗切換: 按下 F3 鍵即可快速切換視窗 自動化操作: 切換視窗後自動執行 F1 鍵操作 延遲控制: 內建適當的延遲時間確保操作穩定性 檔案結構 app/\r├── switch-window.ahk # 主要的 AutoHotkey 腳本檔案\r├── 00_version/ # 版本控制目錄\r│ └── app___original___.lnk # 原始應用程式連結\r└── README.md # 說明文件 使用方法 前置需求 安裝 AutoHotkey 軟體 確保系統已安裝並可正常運行 AutoHotkey 執行步驟 下載或複製 switch-window.ahk 檔案 雙擊執行該檔案，或右鍵選擇「Compile Script」編譯為 .exe 檔案 腳本執行後，按下 F3 鍵即可觸發視窗切換功能 操作流程 當按下 F3 鍵時，腳本會執行以下操作：\n使用 Alt+Tab 切換到上一個視窗 等待 500 毫秒 按下 F1 鍵執行特定操作 再次等待 500 毫秒 使用 Alt+Tab 切換回原視窗 腳本說明 f3:: # 綁定 F3 鍵 Loop, 1 # 執行一次循環 { Send, {Blind}{Alt Down}{Tab}{Alt Up} # 切換視窗 Sleep, 500 # 等待 500 毫秒 Send, {f1} # 按下 F1 鍵 Sleep, 500 # 等待 500 毫秒 Send, {Blind}{Alt Down}{Tab}{Alt Up} # 切換回原視窗 } 自訂設定 您可以根據需要修改以下參數：\n延遲時間: 修改 Sleep, 500 中的數值（單位：毫秒） 觸發按鍵: 修改 f3:: 為其他按鍵組合 執行操作: 修改 Send, {f1} 為其他按鍵或操作 注意事項 請確保在執行腳本前，目標應用程式已開啟並可接受 F1 鍵操作 腳本使用 {Blind} 模式發送按鍵，確保按鍵組合正確執行 如需停止腳本，請在系統托盤中找到 AutoHotkey 圖示並右鍵選擇退出 版本資訊 當前版本：1.0 開發語言：AutoHotkey 相容系統：Windows 授權 此專案僅 …","date":1759881600,"dir":"post\\code\\00_exam---\\syncQQ@@flow\\toggle-edge-pic-window-for-listen-Q\\","expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"527289616942836d9a39a6ba07218e10","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/syncqq@@flow/toggle-edge-pic-window-for-listen-q/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/syncqq@@flow/toggle-edge-pic-window-for-listen-q/","section":"post","tags":["exam---"],"title":"toggle-edge-pic-window-for-listen-Q","type":"post","url":"/post/code/00_exam---/syncqq@@flow/toggle-edge-pic-window-for-listen-q/","weight":0,"wordcount":606},{"author":null,"categories":null,"content":"文字轉多欄圖片工具 這是一個將文字檔案轉換為多欄格式圖片的 Python 工具，特別適用於將長文字內容以視覺化的方式呈現。\n功能特色 將文字檔案內容轉換為多欄格式的圖片 支援中文字體顯示 跨平台字體支援（Windows、macOS、Linux） 可自訂欄數、圖片高度和字體大小 自動調整行間距和邊距 系統需求 Python 3.6+ Pillow (PIL) 套件 安裝依賴 pip install Pillow 使用方法 將要轉換的文字內容放入 combined_titles.txt 檔案中 執行主程式： python app.py 程式會自動生成 !!output.jpg 圖片檔案 程式參數 在 app.py 中可以調整以下參數：\nnum_columns: 欄數（預設：5） image_height: 圖片高度（預設：800） font_size: 字體大小（預設：15） 字體支援 程式會自動偵測並使用以下字體（依優先順序）：\nmacOS: PingFang.ttc Linux: DroidSansFallbackFull.ttf Windows: msyh.ttc (微軟雅黑) 檔案結構 app/\r├── app.py # 主程式\r├── combined_titles.txt # 輸入文字檔案\r├── combined_titles-old.txt # 舊版文字檔案\r├── combined_titles-toeic-stand.txt # TOEIC 標準文字檔案\r├── 新純文字檔案.txt # 新文字檔案\r├── !!output.jpg # 輸出圖片\r├── !bestsize.jpg # 最佳尺寸圖片\r└── README.md # 說明文件 範例輸出 程式會根據輸入的文字內容生成多欄格式的圖片，每欄寬度固定為 300 像素，並自動調整行間距以獲得最佳的視覺效果。\n自訂設定 如需修改輸出格式，可以編輯 app.py 中的以下參數：\n# 在 create_multicolumn_image 函數中 column_width = 300 # 欄寬 line_height = font_size + 2 # 行間距 x = i * column_width + 5 # 左邊距 y = 5 # 上邊距 注意事項 確保輸入的文字檔案使用 UTF-8 編碼 文字內 …","date":1759881600,"dir":"post\\code\\00_exam---\\txt-to-multi-column-pic\\","expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1759881600,"objectID":"be72b25cb8377338417cfc74746b6328","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/txt-to-multi-column-pic/","publishdate":"2025-10-08T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/txt-to-multi-column-pic/","section":"post","tags":["exam---"],"title":"txt-to-multi-column-pic","type":"post","url":"/post/code/00_exam---/txt-to-multi-column-pic/","weight":0,"wordcount":579},{"author":null,"categories":null,"content":" 2025 年，在考試準備方面其實比較生活化。因為現今AI工具越來越方便，所以考試題目不再像從前那樣枯燥無聊，不會再讓人覺得乏味。我一直希望能讓考試準備過程更贴近生活，那到底該怎麼做會比較好呢？\n就舉例來說，假設我們要複習計算機概論這門科目，面對 40 道選擇題，我們常常會遇到一些頭痛的問題：這些題目具體在考察什麼內容？它們可以歸為哪些類別？當中哪些題目比較困難，哪些又相對簡單？\n在過去，我們只能逐題慢慢研讀，遇到不會的內容就容易卡在原地。但現在，我認為可以把整個複習過程拆分成一段一段來處理，具體步驟如下：\n首先，我們要先從阿摩線上論壇這類平台，把相關的考試題目通通下載下來，只要能收集到題目就可以。拿到題目之後，接著要先取得每道題目的基礎答案 —— 每道題目對應一個簡短的答案即可，不需要過於詳細。\n之後，我們將題目與對應的基礎答案合併，合併完成後就進入分類階段。這時可以借助 AI 的幫助：把所有題目統一丟給 AI，讓 AI 判斷這些題目分別屬於哪些類別。至於分類的依據，建議可以選一本自己最熟悉、最喜歡的計算機概論課本，讓 AI 依照這本書的目錄架構來進行分類。\n等 AI 完成分類後，我們再將每道題目的題號，分別移動到對應的類別當中。接下來，透過自動化的方式，把每道題目逐一丟進具備深度思考能力的 AI 工具裡，這一步的目的是希望讓每道題目都能得到延伸解釋。畢竟我們已經有了基礎答案，接下來可以根據題目的實際情況，決定要深入學習到什麼程度 —— 比如先用故事化的方式來闡述題目的背景與解法，透過這種有趣的形式，了解原來某道題目可以用這樣生動的方式解釋。\n另外，為了能在各個平台上同步查看這些學習資料，我們還需要確保在手機、平板等移動設備上也能存取這些內容。具體來說，要讓這些筆記資料同時在本機電腦端和網路鏈結上都能生成對應的存取鏈結，這樣無論使用哪個設備，都能隨時查看筆記內容。\n透過這樣的方式，逐題進行標記與整理，就能清楚看到自己是如何逐步處理這堆題目的。而且這種方法並不侷限於計算機概論的選擇題，還可以應用在所有考試科目的題目處理上：像選擇題這類數量較多的題型，就需要更細緻的分類；至於申論題等題目數量較少的類型，一開始只要記錄題號即可，若要進行分類，則需要收集更多同類型題目後再展開。\n當然，要完成上述所有動作，當中還有很多程序需要妥善銜接，才能確保整個複習流程順暢運行。\n","date":1743465600,"dir":"post\\00_mainTarget - Copy\\2025\\00_mainTarget\\exam-QA-sync\\","expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":["exam"],"kind":"page","lang":"en","lastmod":1743465600,"objectID":"800e087abad7a4e64acba17cc153448c","permalink":"https://wikihuangblog.github.io/post/00_maintarget---copy/2025/00_maintarget/exam-qa-sync/","publishdate":"2025-04-01T00:00:00Z","readingtime":2,"relpermalink":"/post/00_maintarget---copy/2025/00_maintarget/exam-qa-sync/","section":"post","tags":["exam"],"title":"exam-sync","type":"post","url":"/post/00_maintarget---copy/2025/00_maintarget/exam-qa-sync/","weight":0,"wordcount":960},{"author":null,"categories":null,"content":" 2025 年，在考試準備方面其實比較生活化。因為現今AI工具越來越方便，所以考試題目不再像從前那樣枯燥無聊，不會再讓人覺得乏味。我一直希望能讓考試準備過程更贴近生活，那到底該怎麼做會比較好呢？\n就舉例來說，假設我們要複習計算機概論這門科目，面對 40 道選擇題，我們常常會遇到一些頭痛的問題：這些題目具體在考察什麼內容？它們可以歸為哪些類別？當中哪些題目比較困難，哪些又相對簡單？\n在過去，我們只能逐題慢慢研讀，遇到不會的內容就容易卡在原地。但現在，我認為可以把整個複習過程拆分成一段一段來處理，具體步驟如下：\n首先，我們要先從阿摩線上論壇這類平台，把相關的考試題目通通下載下來，只要能收集到題目就可以。拿到題目之後，接著要先取得每道題目的基礎答案 —— 每道題目對應一個簡短的答案即可，不需要過於詳細。\n之後，我們將題目與對應的基礎答案合併，合併完成後就進入分類階段。這時可以借助 AI 的幫助：把所有題目統一丟給 AI，讓 AI 判斷這些題目分別屬於哪些類別。至於分類的依據，建議可以選一本自己最熟悉、最喜歡的計算機概論課本，讓 AI 依照這本書的目錄架構來進行分類。\n等 AI 完成分類後，我們再將每道題目的題號，分別移動到對應的類別當中。接下來，透過自動化的方式，把每道題目逐一丟進具備深度思考能力的 AI 工具裡，這一步的目的是希望讓每道題目都能得到延伸解釋。畢竟我們已經有了基礎答案，接下來可以根據題目的實際情況，決定要深入學習到什麼程度 —— 比如先用故事化的方式來闡述題目的背景與解法，透過這種有趣的形式，了解原來某道題目可以用這樣生動的方式解釋。\n另外，為了能在各個平台上同步查看這些學習資料，我們還需要確保在手機、平板等移動設備上也能存取這些內容。具體來說，要讓這些筆記資料同時在本機電腦端和網路鏈結上都能生成對應的存取鏈結，這樣無論使用哪個設備，都能隨時查看筆記內容。\n透過這樣的方式，逐題進行標記與整理，就能清楚看到自己是如何逐步處理這堆題目的。而且這種方法並不侷限於計算機概論的選擇題，還可以應用在所有考試科目的題目處理上：像選擇題這類數量較多的題型，就需要更細緻的分類；至於申論題等題目數量較少的類型，一開始只要記錄題號即可，若要進行分類，則需要收集更多同類型題目後再展開。\n當然，要完成上述所有動作，當中還有很多程序需要妥善銜接，才能確保整個複習流程順暢運行。\n","date":1743465600,"dir":"post\\00_mainTarget\\2025\\00_mainTarget\\exam-QA-sync\\","expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":["exam"],"kind":"page","lang":"en","lastmod":1743465600,"objectID":"7840d9a66736ed3b0468f735f7b6b9a3","permalink":"https://wikihuangblog.github.io/post/00_maintarget/2025/00_maintarget/exam-qa-sync/","publishdate":"2025-04-01T00:00:00Z","readingtime":2,"relpermalink":"/post/00_maintarget/2025/00_maintarget/exam-qa-sync/","section":"post","tags":["exam"],"title":"exam-sync","type":"post","url":"/post/00_maintarget/2025/00_maintarget/exam-qa-sync/","weight":0,"wordcount":960},{"author":null,"categories":null,"content":"﻿\u0026amp;mdash; title: HTML to PNG Converter description: 一個使用 Selenium 將 HTML 文件批量轉換為 PNG 圖片的工具 author: Your Name created: 2024-03-21 language: Python dependencies:\nselenium webdriver_manager HTML to PNG 轉換工具 這是一個簡單但功能強大的工具，可以將 HTML 文件批量轉換為 PNG 圖片格式。\n功能特點 支持批量轉換整個資料夾中的 HTML 文件 自動調整截圖尺寸以適應頁面內容 支持完整的頁面渲染，包括動態加載的內容 無頭模式運行，不需要圖形界面 安裝需求 pip install selenium webdriver-manager 使用方法 確保已安裝所有依賴包 運行腳本並提供包含 HTML 文件的資料夾路徑： python app.py /path/to/your/html/files 工作原理 此工具使用 Selenium WebDriver：\n以無頭模式啟動 Chrome 瀏覽器 載入 HTML 文件 等待頁面完全渲染 自動調整視窗大小以適應內容 捕獲整個頁面的截圖 將截圖保存為 PNG 格式 注意事項 確保系統已安裝 Chrome 瀏覽器 轉換過程中請確保網絡連接穩定 對於較大的 HTML 文件，可能需要更長的處理時間 錯誤處理 如果遇到以下錯誤：\n\u0026amp;ldquo;錯誤：未提供文件夾路徑\u0026amp;rdquo; - 請確保在運行腳本時提供了正確的資料夾路徑 Chrome 驅動程序相關錯誤 - 請確保已正確安裝 Chrome 瀏覽器 授權 [在此添加您的授權信息]\n貢獻 歡迎提交 Pull Requests 或創建 Issues 來幫助改進這個工具。\n這個 README.md 文件包含了：\r- YAML 前置資料，提供了項目的基本信息\r- 項目描述和主要功能\r- 安裝和使用說明\r- 工作原理說明\r- 錯誤處理指南\r- 授權和貢獻信息\r您可以根據實際需求修改其中的內容，特別是：\r- 更新作者信息\r- 添加具體的授權條款\r- 補充更多的使用場景和示例\r- 添加項目的具體限制和注意事項 ","date":1734998400,"dir":"post\\code\\00_exam---\\00_stastic\\html-to-png\\","expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":["exam---","stastic"],"kind":"page","lang":"en","lastmod":1734998400,"objectID":"a5151d3e245e6194535e45cc0c104cb0","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/00_stastic/html-to-png/","publishdate":"2024-12-24T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/00_stastic/html-to-png/","section":"post","tags":["exam---","stastic"],"title":"html-to-png","type":"post","url":"/post/code/00_exam---/00_stastic/html-to-png/","weight":0,"wordcount":568},{"author":null,"categories":null,"content":"Cursor README Flow 概述 這是一個自動化工具，旨在簡化項目文檔創建和 Cursor 編輯器工作流程。通過按 F1 鍵，工具會自動創建 README.md 文件並在 Cursor 編輯器中打開項目，同時自動生成項目代碼解釋文檔。\n功能特色 一鍵操作: 按 F1 鍵即可完成整個流程 自動文檔創建: 自動生成帶有 YAML front matter 的 README.md 文件 Cursor 集成: 自動在 Cursor 編輯器中打開項目 智能提示: 自動向 Cursor AI 發送代碼解釋請求 路徑複製: 自動複製當前目錄路徑到剪貼簿 文件結構 app/\r├── app.ahk # AutoHotkey 主腳本\r├── create_readme.py # Python 腳本，用於創建 README.md\r├── go.bat # 批處理文件，用於創建空 README.md\r└── README.md # 項目文檔 使用方法 前置條件 安裝 AutoHotkey 安裝 Python 3.x 安裝 Cursor 編輯器 設置步驟 將項目文件放在合適的位置 修改 app.ahk 中的路徑： 更新 Python 腳本路徑（第 22 行） 更新 Cursor.exe 路徑（第 31 行） 操作流程 複製目錄路徑: 在文件資源管理器中複製要打開的項目目錄路徑 按 F1 鍵: 觸發自動化流程 自動執行: 工具會自動： 檢查並創建 README.md 文件（如果不存在） 在 Cursor 編輯器中打開項目 自動向 Cursor AI 發送代碼解釋請求 技術細節 AutoHotkey 腳本 (app.ahk) F1 熱鍵綁定: 觸發整個自動化流程 剪貼簿操作: 獲取目錄路徑 文件檢查: 檢查 README.md 是否存在 Python 調用: 執行 Python 腳本創建文檔 Cursor 啟動: 自動打開 Cursor 編輯器 AI 交互: 自動發送代碼解釋請求 Python 腳本 (create_readme.py) YAML Front Matter: 創建包含標題、日期、描述的元數據 模板生成: 生成標準的 README.md 模板 UTF-8 編碼: 確保中文字符正確顯示 批處理文件 (go.bat) 空文件創建: 創建空的 README.md …","date":1734566400,"dir":"post\\code\\00_AIQA\\ch02_cursor\\cursor-readme-flow\\","expirydate":-62135596800,"fuzzywordcount":900,"html":"自動化工具，用於快速創建項目文檔並在 Cursor 編輯器中打開項目","keywords":["cursor","readme","automation","ahk","python","documentation"],"kind":"page","lang":"en","lastmod":1734566400,"objectID":"f93ce6fe379881e0721a8a9dbcc60067","permalink":"https://wikihuangblog.github.io/post/code/00_aiqa/ch02_cursor/cursor-readme-flow/","publishdate":"2024-12-19T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_aiqa/ch02_cursor/cursor-readme-flow/","section":"post","tags":null,"title":"Cursor README Flow","type":"post","url":"/post/code/00_aiqa/ch02_cursor/cursor-readme-flow/","weight":0,"wordcount":840},{"author":null,"categories":null,"content":"﻿我會為這個專案建立一個包含 YAML front matter 的 README.md 文件。以下是建議的內容：\n--- title: AIQA File Analyzer description: 一個用於分析和生成 AIQA 文件報告的 Python 工具 author: Your Name created: 2024-03-21 language: Python dependencies: - pandas - os - re - sys --- # AIQA File Analyzer ## 專案說明 這是一個用於分析 AIQA 文件並生成 HTML 報告的 Python 工具。該工具可以遍歷指定目錄，解析 .aiqa.html 文件的命名規則，並生成一個包含關鍵信息的 HTML 表格報告。 ## 功能特點 - 遍歷目錄結構並提取 .aiqa.html 文件信息 - 解析文件名中的前綴編號和標記 - 生成帶有條件格式的 HTML 表格報告 - 支持多種標記顏色顯示（紅色、淺藍色等） ## 使用方法 ```bash python app.py \u0026amp;lt;root_folder_path\u0026amp;gt; 參數說明 root_folder_path: 要分析的根目錄路徑 輸出格式 程序會在指定的根目錄下生成 output_table.html 文件，包含以下列：\nkeyword-group：關鍵字組 prefixQ_number：問題前綴編號 marker：標記符號 Question-name：問題名稱 標記顏色說明 [R] - 紅色背景 [B] - 淺藍色背景 文件命名規則 文件名應遵循以下格式：\n目錄名：應包含可提取的前綴數字（例如：123_dirname） 文件名：支持帶標記的格式（例如：[R][B]123_filename.aiqa.html） 錯誤處理 程序會捕獲並記錄文件名解析過程中的錯誤 錯誤信息會在控制台輸出 依賴項目 Python 3.x pandas 標準庫：os, re, sys 授權 [請添加您的授權信息]\n這個 README.md 包含了：\r1. YAML front matter，提供了基本的項目元數據\r2. 詳細的項目說明和功能介紹\r3. 使用方法和參數說明\r4. 輸出格式說明\r5. 標記規則說明\r6. 文件命名規則\r7. 錯誤處理說明\r8. …","date":1731715200,"dir":"post\\code\\00_exam---\\exam-outline-to-table\\","expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":["exam---"],"kind":"page","lang":"en","lastmod":1731715200,"objectID":"49d294ccd4c84b377874c873a6cf3589","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/exam-outline-to-table/","publishdate":"2024-11-16T00:00:00Z","readingtime":2,"relpermalink":"/post/code/00_exam---/exam-outline-to-table/","section":"post","tags":["exam---"],"title":"exam-outline-to-table","type":"post","url":"/post/code/00_exam---/exam-outline-to-table/","weight":0,"wordcount":638},{"author":null,"categories":null,"content":"﻿我會為您創建一個包含 YAML front matter 的 README.md 文件。以下是建議的內容：\n--- title: Split-Statistic description: 一個用於分割 HTML 文件的 Python 工具 author: Your Name created: 2024-03-21 language: Python dependencies: - beautifulsoup4 --- # Split-Statistic 一個簡單但實用的 Python 工具，用於將包含多個文章的 HTML 文件分割成獨立的 HTML 文件。 ## 功能特點 - 自動識別並處理 HTML 中的圖片和連結 - 為未包裝的圖片添加必要的 separator 標籤 - 自動創建表格結構（如需要） - 支持 UTF-8 編碼 - 按順序生成獨立的 HTML 文件 ## 安裝需求 ```bash pip install beautifulsoup4 使用方法 將您要處理的 HTML 文件放在程式同一目錄下 修改 input_file 變量為您的輸入文件名稱 運行程式： python app.py 輸出結果 程式會在當前目錄下生成多個 HTML 文件，格式為 art_1.html、art_2.html 等。\n自定義分割標記 您可以通過修改 separator_tag 變量來自定義分割標記：\nseparator_tag = \u0026amp;#39;\u0026amp;lt;div class=\u0026amp;#34;separator\u0026amp;#34;\u0026amp;#39; # 預設值 # 或 separator_tag = \u0026amp;#39;\u0026amp;lt;table bgcolor\u0026amp;#39; # 替代選項 注意事項 確保輸入文件使用 UTF-8 編碼 程式會自動處理未正確包裝的圖片元素 輸出文件將保持原始 HTML 結構 授權 [選擇您的授權方式]\n貢獻 歡迎提交 Issue 和 Pull Request！\n這個 README.md 包含了：\r1. YAML front matter 包含基本項目信息\r2. 項目描述和主要功能\r3. 安裝和使用說明\r4. 自定義選項說明\r5. 注意事項\r6. 授權和貢獻指南\r您可以根據實際需求修改內容，特別是：\r- 更新作者信息\r- 選擇合適的授權方式\r- 添加更多具體的使用案例\r- 補充其他相關文檔連結 ","date":1731715200,"dir":"post\\code\\00_exam---\\00_stastic\\split-statistic\\","expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":["exam---","stastic"],"kind":"page","lang":"en","lastmod":1731715200,"objectID":"23e728c1e7a628eb2b2a8f78b1b8eb0e","permalink":"https://wikihuangblog.github.io/post/code/00_exam---/00_stastic/split-statistic/","publishdate":"2024-11-16T00:00:00Z","readingtime":1,"relpermalink":"/post/code/00_exam---/00_stastic/split-statistic/","section":"post","tags":["exam---","stastic"],"title":"split-statistic","type":"post","url":"/post/code/00_exam---/00_stastic/split-statistic/","weight":0,"wordcount":495},{"author":null,"categories":null,"content":"首次挑戰半馬後的身心轉變：從熱血嘗試到生活融合的跑步之旅 當時為什麼會想要去跑馬拉松呢？沒跑過之前，覺得好像跑個 5 公里、8 公里，是件很了不起的事情。那時不知道為什麼那麼熱血，就想做一件以前沒有做過的事情，想試試看自己能不能做到。因為之前騎腳踏車，騎得有點想換一下口味的感覺，所以就轉向了跑步。\n開始跑馬拉松之後，才意識到一些自己以前沒有注意過的問題。其實跑馬拉松的重點不在於你的腳或肌肉，而是你的整體身體狀況。例如，要怎麼樣才不會覺得過熱，要怎麼樣早起，要怎麼樣面對自己的身體狀況 —— 從你一大早起來開始，就要規劃好什麼時候上廁所。像比賽當天，一大早 5 點半就必須將身體狀況調到最佳，才有可能把 20 公里跑完。\n而且過程中，皮膚的溫度調節能力也得比一般人好。大部分的有人在比賽時，跑到一半就因為汗流太多、失溫等問題，沒能發揮出原本的實力。我個人覺得，論體力我可能不是最好的，但論調整身體狀況，我表現得還不錯。比如有一天要去跑步，我可能 3 點多就會自然醒來，先解決身體的排泄、上廁所等問題，確保在整個 20 公里的路程中，身體狀況不會出問題。這樣才不會留下遺憾，至少當天我能把自己的最佳狀況表現出來，而不是事後抱怨沒能展現最好的自己，那真的是件很可惜的事情。\n那一次跑步，我其實比平常跑得還要快一點。要知道，我平常最多只跑過 10 公里，而那是我人生第一次跑完 21 公里（半馬）。整個過程沒有受傷，跑完之後精神狀態也不錯，這就算是很成功的一次體驗了。\n第一次跑完半馬之後，就開始想著要進步。畢竟跑步這件事，如果每次都只抱著「志在參加，不在得獎」的心態，其實沒什麼意思。於是就開始思考：要怎麼樣才有可能拿到獎金呢？這對我來說是個很大的挑戰。從那之後，我就開始嘗試讓自己跑得更快，比如每天洗冷水澡。在堅持洗冷水澡的過程中，皮膚的溫度調節能力變得更好了，慢慢就不怕冷也不怕熱。不過我還是很討厭吹冷氣，因為冷氣會影響身體皮膚的自我調節功能，後來甚至連電風扇、冷氣都不太需要開了，因為皮膚能自己調節體溫。\n除此之外，想要進步，還得先認識自己的腳。所以當時我開始偏向穿非常薄的鞋子，薄到幾乎跟襪子一樣。因為在選對鞋子之前，要先了解自己的腳 —— 當腳接觸地板時，那種觸感是什麼？只有掌握了這種感覺，才有辦法維持最佳的平衡，並運用身體的重力前進。\n不過我一向不是追求速度的人，更希望跑步能融合在生活當 …","date":1605830400,"dir":"post\\00_mainTarget - Copy\\2020\\00_mainTarget\\malson\\","expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":["run"],"kind":"page","lang":"en","lastmod":1605830400,"objectID":"fbd5f8c3fc4b5f855f487dcaca97a7c8","permalink":"https://wikihuangblog.github.io/post/00_maintarget---copy/2020/00_maintarget/malson/","publishdate":"2020-11-20T00:00:00Z","readingtime":3,"relpermalink":"/post/00_maintarget---copy/2020/00_maintarget/malson/","section":"post","tags":["run"],"title":"run malson","type":"post","url":"/post/00_maintarget---copy/2020/00_maintarget/malson/","weight":0,"wordcount":1050},{"author":null,"categories":null,"content":"首次挑戰半馬後的身心轉變：從熱血嘗試到生活融合的跑步之旅 當時為什麼會想要去跑馬拉松呢？沒跑過之前，覺得好像跑個 5 公里、8 公里，是件很了不起的事情。那時不知道為什麼那麼熱血，就想做一件以前沒有做過的事情，想試試看自己能不能做到。因為之前騎腳踏車，騎得有點想換一下口味的感覺，所以就轉向了跑步。\n開始跑馬拉松之後，才意識到一些自己以前沒有注意過的問題。其實跑馬拉松的重點不在於你的腳或肌肉，而是你的整體身體狀況。例如，要怎麼樣才不會覺得過熱，要怎麼樣早起，要怎麼樣面對自己的身體狀況 —— 從你一大早起來開始，就要規劃好什麼時候上廁所。像比賽當天，一大早 5 點半就必須將身體狀況調到最佳，才有可能把 20 公里跑完。\n而且過程中，皮膚的溫度調節能力也得比一般人好。大部分的有人在比賽時，跑到一半就因為汗流太多、失溫等問題，沒能發揮出原本的實力。我個人覺得，論體力我可能不是最好的，但論調整身體狀況，我表現得還不錯。比如有一天要去跑步，我可能 3 點多就會自然醒來，先解決身體的排泄、上廁所等問題，確保在整個 20 公里的路程中，身體狀況不會出問題。這樣才不會留下遺憾，至少當天我能把自己的最佳狀況表現出來，而不是事後抱怨沒能展現最好的自己，那真的是件很可惜的事情。\n那一次跑步，我其實比平常跑得還要快一點。要知道，我平常最多只跑過 10 公里，而那是我人生第一次跑完 21 公里（半馬）。整個過程沒有受傷，跑完之後精神狀態也不錯，這就算是很成功的一次體驗了。\n第一次跑完半馬之後，就開始想著要進步。畢竟跑步這件事，如果每次都只抱著「志在參加，不在得獎」的心態，其實沒什麼意思。於是就開始思考：要怎麼樣才有可能拿到獎金呢？這對我來說是個很大的挑戰。從那之後，我就開始嘗試讓自己跑得更快，比如每天洗冷水澡。在堅持洗冷水澡的過程中，皮膚的溫度調節能力變得更好了，慢慢就不怕冷也不怕熱。不過我還是很討厭吹冷氣，因為冷氣會影響身體皮膚的自我調節功能，後來甚至連電風扇、冷氣都不太需要開了，因為皮膚能自己調節體溫。\n除此之外，想要進步，還得先認識自己的腳。所以當時我開始偏向穿非常薄的鞋子，薄到幾乎跟襪子一樣。因為在選對鞋子之前，要先了解自己的腳 —— 當腳接觸地板時，那種觸感是什麼？只有掌握了這種感覺，才有辦法維持最佳的平衡，並運用身體的重力前進。\n不過我一向不是追求速度的人，更希望跑步能融合在生活當 …","date":1605830400,"dir":"post\\00_mainTarget\\2020\\00_mainTarget\\malson\\","expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":["run"],"kind":"page","lang":"en","lastmod":1605830400,"objectID":"ad989e08209334d3dd93147e5676c308","permalink":"https://wikihuangblog.github.io/post/00_maintarget/2020/00_maintarget/malson/","publishdate":"2020-11-20T00:00:00Z","readingtime":3,"relpermalink":"/post/00_maintarget/2020/00_maintarget/malson/","section":"post","tags":["run"],"title":"run malson","type":"post","url":"/post/00_maintarget/2020/00_maintarget/malson/","weight":0,"wordcount":1050},{"author":null,"categories":null,"content":"first note blog https://wikihuang.github.io/\n這是第一篇關於筆記網誌的記錄，當時完成的這個版本的網誌，就是你一直希望能實現的 —— 把每次寫的文章順利接軌上傳的功能。當然，那個時候的網誌主要用來存放一些精心整理過的筆記。只不過，每一篇文章都要花很多時間做精細的整理，所以雖然文章完成後正確性很高，但時間消耗實在太久了。\n其實筆記這類東西，本來就需要比較隨性地記錄，就算有錯字，也要快速寫下來，這樣才能達到每天記錄的目的。而當時做的那個網誌版本，有一個功能是記錄你每年做了什麼，比如每年有哪些文章寫得比較仔細、可以公開給別人看。它的主要特色是按年份呈現已完成的內容，旁邊還會有目錄關鍵字，透過這些就能很清楚地看到每類文章的數量、對應的關鍵字數量等等。\n不過這個專案，在那之後又隔了很多年才有辦法繼續推進，畢竟當時筆記的書寫速度不快，沒辦法頻繁地更新內容。直到後來 AI 技術興起，加上語音輸入變得越來越自然，才終於有機會重新恢復這種記錄生活的方式 —— 不僅能很隨性地記錄每天的筆記、做好筆記管理，還能同步列出待辦事項，讓寫日記、記筆記重新成為日常。\n2017\u0026amp;ndash; Knife-Defense-on-the-Ground ordinal streetfight\nHow-to-Get-Out-Headlock ordinal streetfight\nTop-3-Choke-Escapes-for-Self-Defense ordinal self-defense\n0.1_Welcome ordinal test-driven-development-in-php-with-phpunit\n3.2_Creating-components-with-createClass() ordinal react.js-essential-training\n3.3_Adding-component-properties ordinal react.js-essential-training\nWelcome to Jekyll! ordinal jekyll, update\n2.5_building With Webpack ordinal\n2016\u0026amp;ndash; 單句反覆功能-找出英文不懂的句子 ordinal e-learning …","date":1476057600,"dir":"post\\00_mainTarget - Copy\\2016\\00_mainTarget\\target\\octopress-blog\\","expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":["筆記網誌","AI 語音輸入","隨性記錄","年份歸檔","日記管理"],"kind":"page","lang":"en","lastmod":1476057600,"objectID":"90d959d31b755e4fc5a85e8c7d2e1a88","permalink":"https://wikihuangblog.github.io/post/00_maintarget---copy/2016/00_maintarget/target/octopress-blog/","publishdate":"2016-10-10T00:00:00Z","readingtime":3,"relpermalink":"/post/00_maintarget---copy/2016/00_maintarget/target/octopress-blog/","section":"post","tags":["筆記網誌","AI 助力","日常記錄","時間管理","內容整理"],"title":"first note blog","type":"post","url":"/post/00_maintarget---copy/2016/00_maintarget/target/octopress-blog/","weight":0,"wordcount":1008},{"author":null,"categories":null,"content":"first note blog https://wikihuang.github.io/\n這是第一篇關於筆記網誌的記錄，當時完成的這個版本的網誌，就是你一直希望能實現的 —— 把每次寫的文章順利接軌上傳的功能。當然，那個時候的網誌主要用來存放一些精心整理過的筆記。只不過，每一篇文章都要花很多時間做精細的整理，所以雖然文章完成後正確性很高，但時間消耗實在太久了。\n其實筆記這類東西，本來就需要比較隨性地記錄，就算有錯字，也要快速寫下來，這樣才能達到每天記錄的目的。而當時做的那個網誌版本，有一個功能是記錄你每年做了什麼，比如每年有哪些文章寫得比較仔細、可以公開給別人看。它的主要特色是按年份呈現已完成的內容，旁邊還會有目錄關鍵字，透過這些就能很清楚地看到每類文章的數量、對應的關鍵字數量等等。\n不過這個專案，在那之後又隔了很多年才有辦法繼續推進，畢竟當時筆記的書寫速度不快，沒辦法頻繁地更新內容。直到後來 AI 技術興起，加上語音輸入變得越來越自然，才終於有機會重新恢復這種記錄生活的方式 —— 不僅能很隨性地記錄每天的筆記、做好筆記管理，還能同步列出待辦事項，讓寫日記、記筆記重新成為日常。\n2017\u0026amp;ndash; Knife-Defense-on-the-Ground ordinal streetfight\nHow-to-Get-Out-Headlock ordinal streetfight\nTop-3-Choke-Escapes-for-Self-Defense ordinal self-defense\n0.1_Welcome ordinal test-driven-development-in-php-with-phpunit\n3.2_Creating-components-with-createClass() ordinal react.js-essential-training\n3.3_Adding-component-properties ordinal react.js-essential-training\nWelcome to Jekyll! ordinal jekyll, update\n2.5_building With Webpack ordinal\n2016\u0026amp;ndash; 單句反覆功能-找出英文不懂的句子 ordinal e-learning …","date":1476057600,"dir":"post\\00_mainTarget\\2016\\00_mainTarget\\target\\octopress-blog\\","expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":["筆記網誌","AI 語音輸入","隨性記錄","年份歸檔","日記管理"],"kind":"page","lang":"en","lastmod":1476057600,"objectID":"517d0b7fc402b069e137d45b89b42f60","permalink":"https://wikihuangblog.github.io/post/00_maintarget/2016/00_maintarget/target/octopress-blog/","publishdate":"2016-10-10T00:00:00Z","readingtime":3,"relpermalink":"/post/00_maintarget/2016/00_maintarget/target/octopress-blog/","section":"post","tags":["筆記網誌","AI 助力","日常記錄","時間管理","內容整理"],"title":"first note blog","type":"post","url":"/post/00_maintarget/2016/00_maintarget/target/octopress-blog/","weight":0,"wordcount":1008},{"author":null,"categories":null,"content":" 那過了這麼久，我的英文打字速度終於可以達到比較快的水準了，也順利進入了進階階段。據我所知，這個英文打字考試的最高標準，大概是每分鐘 60 個字，可說是極限中的極限；而只要達到每分鐘 40 個字以上，就能夠進入進階等級。\n其實我還蠻喜歡英文打字的，因為英文打字相對直覺，不像中文打字那樣需要考慮眾多候選字等額外環節。而且就算不小心打錯字，也算是有一定的容錯空間。現在的我，甚至學會了閉著眼睛打字。\n更重要的是，英文打字是一件很生活化的技能，每次進行輸入時，大腦都會自然而然地觸發相關的記憶，操作起來也越來越熟練。\n","date":1402012800,"dir":"post\\00_mainTarget - Copy\\2014\\00_mainTarget\\typing\\","expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":["typing"],"kind":"page","lang":"en","lastmod":1402012800,"objectID":"3720d4e5bb4317cb2144488f8ed847e0","permalink":"https://wikihuangblog.github.io/post/00_maintarget---copy/2014/00_maintarget/typing/","publishdate":"2014-06-06T00:00:00Z","readingtime":1,"relpermalink":"/post/00_maintarget---copy/2014/00_maintarget/typing/","section":"post","tags":["typing"],"title":"英文打字學習進階：速度提升與操作體驗分享","type":"post","url":"/post/00_maintarget---copy/2014/00_maintarget/typing/","weight":0,"wordcount":247},{"author":null,"categories":null,"content":" 那過了這麼久，我的英文打字速度終於可以達到比較快的水準了，也順利進入了進階階段。據我所知，這個英文打字考試的最高標準，大概是每分鐘 60 個字，可說是極限中的極限；而只要達到每分鐘 40 個字以上，就能夠進入進階等級。\n其實我還蠻喜歡英文打字的，因為英文打字相對直覺，不像中文打字那樣需要考慮眾多候選字等額外環節。而且就算不小心打錯字，也算是有一定的容錯空間。現在的我，甚至學會了閉著眼睛打字。\n更重要的是，英文打字是一件很生活化的技能，每次進行輸入時，大腦都會自然而然地觸發相關的記憶，操作起來也越來越熟練。\n","date":1402012800,"dir":"post\\00_mainTarget\\2014\\00_mainTarget\\typing\\","expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":["typing"],"kind":"page","lang":"en","lastmod":1402012800,"objectID":"8ac02f385dc1edc685ecf083bdd0a30e","permalink":"https://wikihuangblog.github.io/post/00_maintarget/2014/00_maintarget/typing/","publishdate":"2014-06-06T00:00:00Z","readingtime":1,"relpermalink":"/post/00_maintarget/2014/00_maintarget/typing/","section":"post","tags":["typing"],"title":"英文打字學習進階：速度提升與操作體驗分享","type":"post","url":"/post/00_maintarget/2014/00_maintarget/typing/","weight":0,"wordcount":247},{"author":null,"categories":null,"content":" 那時的想法很單純，就是希望考過多益證書。只為了在求職時能多些話題可說，多向對方介紹自己具備哪些能力而已。當時準備的過程真的蠻辛苦的，畢竟多益考試講究的就是速度，還得兼具判斷力。遇到題目的時候，千萬不要猶豫不決，直接憑直覺作答就對了。而且很神奇的是，我那次考試的聽力與閱讀部分拿到了一模一樣的分數，最後總分加起來是 690 分。對當時的我來說，也算是把該發揮的實力都發揮出來了。\n如今，距當時已過了十幾年，現在學習英文變得更自然、也更簡單了。不再像從前那樣，只能靠著一本書辛苦研讀，現在生活中隨時都能學習。就連日常使用的中文，透過 AI 也能即時同步翻譯。以後學習英文，就能以更自然的方式進行。我也相信，現在自己的英文能力，一定比當初更強了。\n","date":1399248000,"dir":"post\\00_mainTarget - Copy\\2014\\00_mainTarget\\toeic\\","expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":["toeic"],"kind":"page","lang":"en","lastmod":1399248000,"objectID":"1c4ba4701931b7d18d37c98adb4051f3","permalink":"https://wikihuangblog.github.io/post/00_maintarget---copy/2014/00_maintarget/toeic/","publishdate":"2014-05-05T00:00:00Z","readingtime":1,"relpermalink":"/post/00_maintarget---copy/2014/00_maintarget/toeic/","section":"post","tags":["toeic"],"title":"多益備考回憶與英文學習方式演變","type":"post","url":"/post/00_maintarget---copy/2014/00_maintarget/toeic/","weight":0,"wordcount":312},{"author":null,"categories":null,"content":" 那時的想法很單純，就是希望考過多益證書。只為了在求職時能多些話題可說，多向對方介紹自己具備哪些能力而已。當時準備的過程真的蠻辛苦的，畢竟多益考試講究的就是速度，還得兼具判斷力。遇到題目的時候，千萬不要猶豫不決，直接憑直覺作答就對了。而且很神奇的是，我那次考試的聽力與閱讀部分拿到了一模一樣的分數，最後總分加起來是 690 分。對當時的我來說，也算是把該發揮的實力都發揮出來了。\n如今，距當時已過了十幾年，現在學習英文變得更自然、也更簡單了。不再像從前那樣，只能靠著一本書辛苦研讀，現在生活中隨時都能學習。就連日常使用的中文，透過 AI 也能即時同步翻譯。以後學習英文，就能以更自然的方式進行。我也相信，現在自己的英文能力，一定比當初更強了。\n","date":1399248000,"dir":"post\\00_mainTarget\\2014\\00_mainTarget\\toeic\\","expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":["toeic"],"kind":"page","lang":"en","lastmod":1399248000,"objectID":"52942b816737a09ec8e36d2bc131c9c7","permalink":"https://wikihuangblog.github.io/post/00_maintarget/2014/00_maintarget/toeic/","publishdate":"2014-05-05T00:00:00Z","readingtime":1,"relpermalink":"/post/00_maintarget/2014/00_maintarget/toeic/","section":"post","tags":["toeic"],"title":"多益備考回憶與英文學習方式演變","type":"post","url":"/post/00_maintarget/2014/00_maintarget/toeic/","weight":0,"wordcount":312},{"author":null,"categories":null,"content":"e管家及時通 然後這個就是當時做到吐血的專案了。怎麼說哩，一言難盡啊。這個專案讓我意識到說自己很爛哦。就是有史以來感覺到說，哎，什麼事版本控制哦。什麼叫專案管理了？什麼叫組員協調那當時的我？呃，第一次遇到這種事情是在，是。不知道怎麼辦啊？然後就是。就只能夠努力而做好自己自己能夠做的事情啊。因為在那邊抱怨一大堆的，還不如把自己能夠做的事情做完再說吧。那這個專案呢，目的是要讓那個使用者可以。就是一般的民眾啊，一般的民眾可以透過這個。算是桌面應用程序吧？然後去存取政府相關的訊息喔。然後做一些收藏啊，然後過濾了相關動作。那整個過程是蠻辛苦的啦，然後。過程中是學到很多東西啊，就是。錯誤訊息的記錄啊，然後。要怎麼做單元測試啊等等的。這過程當中被強迫性的養成了就是。對於程序的規範就很龜毛的程度了，因為只要一個命名不確實呢，後來就要搜尋就很不容易了。\n當時我覺得最辛苦的事情是。看文件吧。要從幾萬頁的內容當中，搜尋到自己要的那一行，真的是很已經很困難的事情了。那找到資料之后，就一定要能夠。必需要好好的妥善保存，才能夠。再度找到。自己曾經搜尋過的資料。那也因為這個習慣，才不會讓你就是在大量的資料當中迷失了。那現在AI呢？在提問方面就方便很多了，但不管提問要如何方便,保存就有資料一樣是很重要的事情。不管別人提供的答案有多好，你要如何再度把那份資料調出來，就看你自己的管理功力了。\n","date":1293840000,"dir":"post\\00_mainTarget - Copy\\2011\\00_mainTarget\\etool\\","expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":["code"],"kind":"page","lang":"en","lastmod":1293840000,"objectID":"a0f5c2c72be57c79d10117c9b45bc191","permalink":"https://wikihuangblog.github.io/post/00_maintarget---copy/2011/00_maintarget/etool/","publishdate":"2011-01-01T00:00:00Z","readingtime":2,"relpermalink":"/post/00_maintarget---copy/2011/00_maintarget/etool/","section":"post","tags":["code"],"title":"etool","type":"post","url":"/post/00_maintarget---copy/2011/00_maintarget/etool/","weight":0,"wordcount":585},{"author":null,"categories":null,"content":"e管家及時通 然後這個就是當時做到吐血的專案了。怎麼說哩，一言難盡啊。這個專案讓我意識到說自己很爛哦。就是有史以來感覺到說，哎，什麼事版本控制哦。什麼叫專案管理了？什麼叫組員協調那當時的我？呃，第一次遇到這種事情是在，是。不知道怎麼辦啊？然後就是。就只能夠努力而做好自己自己能夠做的事情啊。因為在那邊抱怨一大堆的，還不如把自己能夠做的事情做完再說吧。那這個專案呢，目的是要讓那個使用者可以。就是一般的民眾啊，一般的民眾可以透過這個。算是桌面應用程序吧？然後去存取政府相關的訊息喔。然後做一些收藏啊，然後過濾了相關動作。那整個過程是蠻辛苦的啦，然後。過程中是學到很多東西啊，就是。錯誤訊息的記錄啊，然後。要怎麼做單元測試啊等等的。這過程當中被強迫性的養成了就是。對於程序的規範就很龜毛的程度了，因為只要一個命名不確實呢，後來就要搜尋就很不容易了。\n當時我覺得最辛苦的事情是。看文件吧。要從幾萬頁的內容當中，搜尋到自己要的那一行，真的是很已經很困難的事情了。那找到資料之后，就一定要能夠。必需要好好的妥善保存，才能夠。再度找到。自己曾經搜尋過的資料。那也因為這個習慣，才不會讓你就是在大量的資料當中迷失了。那現在AI呢？在提問方面就方便很多了，但不管提問要如何方便,保存就有資料一樣是很重要的事情。不管別人提供的答案有多好，你要如何再度把那份資料調出來，就看你自己的管理功力了。\n","date":1293840000,"dir":"post\\00_mainTarget\\2011\\00_mainTarget\\etool\\","expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":["code"],"kind":"page","lang":"en","lastmod":1293840000,"objectID":"d4bea37bf8b61a8208d054659936869b","permalink":"https://wikihuangblog.github.io/post/00_maintarget/2011/00_maintarget/etool/","publishdate":"2011-01-01T00:00:00Z","readingtime":2,"relpermalink":"/post/00_maintarget/2011/00_maintarget/etool/","section":"post","tags":["code"],"title":"etool","type":"post","url":"/post/00_maintarget/2011/00_maintarget/etool/","weight":0,"wordcount":585},{"author":null,"categories":null,"content":"email-organize 過去在做這個專案的時候啊，當時其實最可怕的問題就是要面對這些數不完的email。就每天都要進行。這個專案的編輯嘛，每天都要修改啊哪，每一天都會有業主的意見了。所以email可以說是被塞爆的狀態啊。那到底要怎麼整理比較好呢？我覺得email這麼多要。將他依照不同的類別加以分類啊。那就是我當初設定的第一個版本嘛，當時是把每一個email的鏈結通通。就用Excel的方式呢來產生出一各可以排序啊，可以搜尋啊，那依照日期排序然後關鍵字。去過濾的一個架構，這樣比較好搜尋了。那這是完我完成了第一個版本了。那後來就不用這種方法了。後來是。比較偏向檔案搜尋的方式就是將每一個email的鏈結都。透過Outlook的一個MSG檔案，然後。透過ABC去搜尋。那在分類方面呢，這是用資料夾，然後依照關鍵字去分類啊。那日期的部分呢一樣就是。依照。 Email送過來的日期呢來作為分類了。那在那之後呢，就比較不會去害怕這種大量的email管理問題。\n","date":1293840000,"dir":"post\\00_mainTarget - Copy\\2011\\00_mainTarget\\etool-email\\","expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":["eool"],"kind":"page","lang":"en","lastmod":1293840000,"objectID":"8955fd2b7289bb29207899c35d55a157","permalink":"https://wikihuangblog.github.io/post/00_maintarget---copy/2011/00_maintarget/etool-email/","publishdate":"2011-01-01T00:00:00Z","readingtime":1,"relpermalink":"/post/00_maintarget---copy/2011/00_maintarget/etool-email/","section":"post","tags":["etool"],"title":"etool-email","type":"post","url":"/post/00_maintarget---copy/2011/00_maintarget/etool-email/","weight":0,"wordcount":413},{"author":null,"categories":null,"content":"email-organize 過去在做這個專案的時候啊，當時其實最可怕的問題就是要面對這些數不完的email。就每天都要進行。這個專案的編輯嘛，每天都要修改啊哪，每一天都會有業主的意見了。所以email可以說是被塞爆的狀態啊。那到底要怎麼整理比較好呢？我覺得email這麼多要。將他依照不同的類別加以分類啊。那就是我當初設定的第一個版本嘛，當時是把每一個email的鏈結通通。就用Excel的方式呢來產生出一各可以排序啊，可以搜尋啊，那依照日期排序然後關鍵字。去過濾的一個架構，這樣比較好搜尋了。那這是完我完成了第一個版本了。那後來就不用這種方法了。後來是。比較偏向檔案搜尋的方式就是將每一個email的鏈結都。透過Outlook的一個MSG檔案，然後。透過ABC去搜尋。那在分類方面呢，這是用資料夾，然後依照關鍵字去分類啊。那日期的部分呢一樣就是。依照。 Email送過來的日期呢來作為分類了。那在那之後呢，就比較不會去害怕這種大量的email管理問題。\n","date":1293840000,"dir":"post\\00_mainTarget\\2011\\00_mainTarget\\etool-email\\","expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":["eool"],"kind":"page","lang":"en","lastmod":1293840000,"objectID":"82cbf34704df8cad1f60be0496b7aa14","permalink":"https://wikihuangblog.github.io/post/00_maintarget/2011/00_maintarget/etool-email/","publishdate":"2011-01-01T00:00:00Z","readingtime":1,"relpermalink":"/post/00_maintarget/2011/00_maintarget/etool-email/","section":"post","tags":["etool"],"title":"etool-email","type":"post","url":"/post/00_maintarget/2011/00_maintarget/etool-email/","weight":0,"wordcount":413},{"author":null,"categories":null,"content":"四技二專志願表系統 這是2010年的。那個剛進入研究所第一年的紀錄。那當時第一個專案就是要做一個志願表嘛。就當時有那個四技二專的招商系統，然後要做一個前端的報名界面。那當時就是老師給我一個。有用到資料庫的鳥類觀察記錄哦。然後用相同的程序結構，然後去研究一下資料庫啊怎麼用啊？結構欸。欄位啊等等的一樣畫葫蘆吧。那也是有史以來第一次去認識一下什麼叫大專案呢？每個程序的模組，而要依序放在什麼樣的位置？然後有。架構的去組成一個專案啊。呃，並且也要去研究一些邏輯啊。研究說不同的身份。一般的學生或者是特殊的學生，或者是他有多重身份等等的，要怎麼樣去報名不一樣的。學校啊，等等的。然後當時還沒有這麼好的版本控制工具啊，所以每個小部分就是一個小檔案了。那這個方法。放到現代來說的話，如果你有好的檔案，比對工具的話一樣有不錯的效果。那我在之後呢就有完成了一些它的順序圖畫流程圖等等的。就是要把當初的專案了。就裡面的架構，然後。在現代的話可以透過AI的技術呢，架構變得更加明確了。\n那由於過去是用flex做的嘛，那現在已經不支援這個技術，那好在過去的程序都還有保留的好。可透過AI來。擷取他們的相關架構。根據這個架構呢，就可以在用比較現代的語言呢來進行製作。產生出架構更加乾淨的專案了。\n","date":1262304000,"dir":"post\\00_mainTarget - Copy\\2010\\00_mainTarget{bird,wish}\\wishCase\\","expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":["bird","wish"],"kind":"page","lang":"en","lastmod":1262304000,"objectID":"b66036fb885e5a4d36e62529b1586926","permalink":"https://wikihuangblog.github.io/post/00_maintarget---copy/2010/00_maintargetbirdwish/wishcase/","publishdate":"2010-01-01T00:00:00Z","readingtime":2,"relpermalink":"/post/00_maintarget---copy/2010/00_maintargetbirdwish/wishcase/","section":"post","tags":["bird","wish"],"title":"wishCase","type":"post","url":"/post/00_maintarget---copy/2010/00_maintargetbirdwish/wishcase/","weight":0,"wordcount":533},{"author":null,"categories":null,"content":"四技二專志願表系統 這是2010年的。那個剛進入研究所第一年的紀錄。那當時第一個專案就是要做一個志願表嘛。就當時有那個四技二專的招商系統，然後要做一個前端的報名界面。那當時就是老師給我一個。有用到資料庫的鳥類觀察記錄哦。然後用相同的程序結構，然後去研究一下資料庫啊怎麼用啊？結構欸。欄位啊等等的一樣畫葫蘆吧。那也是有史以來第一次去認識一下什麼叫大專案呢？每個程序的模組，而要依序放在什麼樣的位置？然後有。架構的去組成一個專案啊。呃，並且也要去研究一些邏輯啊。研究說不同的身份。一般的學生或者是特殊的學生，或者是他有多重身份等等的，要怎麼樣去報名不一樣的。學校啊，等等的。然後當時還沒有這麼好的版本控制工具啊，所以每個小部分就是一個小檔案了。那這個方法。放到現代來說的話，如果你有好的檔案，比對工具的話一樣有不錯的效果。那我在之後呢就有完成了一些它的順序圖畫流程圖等等的。就是要把當初的專案了。就裡面的架構，然後。在現代的話可以透過AI的技術呢，架構變得更加明確了。\n那由於過去是用flex做的嘛，那現在已經不支援這個技術，那好在過去的程序都還有保留的好。可透過AI來。擷取他們的相關架構。根據這個架構呢，就可以在用比較現代的語言呢來進行製作。產生出架構更加乾淨的專案了。\n","date":1262304000,"dir":"post\\00_mainTarget\\2010\\00_mainTarget{bird,wish}\\wishCase\\","expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":["bird","wish"],"kind":"page","lang":"en","lastmod":1262304000,"objectID":"524c4af76d5bed4ef265a97fcedde4b4","permalink":"https://wikihuangblog.github.io/post/00_maintarget/2010/00_maintargetbirdwish/wishcase/","publishdate":"2010-01-01T00:00:00Z","readingtime":2,"relpermalink":"/post/00_maintarget/2010/00_maintargetbirdwish/wishcase/","section":"post","tags":["bird","wish"],"title":"wishCase","type":"post","url":"/post/00_maintarget/2010/00_maintargetbirdwish/wishcase/","weight":0,"wordcount":533},{"author":null,"categories":null,"content":"game-project-report 他只是大學四年級做的遊戲專案。這個專案其實。就是把。書本學習的內容貫徹到底吧。當時看了什麼，看了射擊遊戲啊。然後看到那個迷宮的編輯器哦。生了2.5D的地圖啊。自行加入地圖編輯器等等的。當時深刻的體會到看過一本書，跟真正的貫徹一本書內容是完全不一樣的事情。就當時就很敬佩能夠寫書的作者，所以之後就也想要試著去寫說明文件。那也就算是。在那之後會就是決心學習輸入法，決心打字打快一點，可以打到盲打的程度。就遇到的事情之後才意識到能力不足吧，然後在去改善這樣子。\n國立台中技術學院\n多媒體設計系\n98****級專題設計與製作報告\nWii****互動與網路行銷\n互動組\n​ 學生/學號： 周子喻 14944020\n​ 黃蔚麒 14944038\n​ 指導教授： 蔡子瑋 教授\n中華民國 98 年 3 月\n童幻冒險島\n學生：周子喻 指導教授：蔡子瑋 教授\n黃蔚麒\n國立臺中技術學院多媒體設計系\n摘 要\n在傳統的RPG遊戲中，加入Wii的互動方式，讓玩家不只能體驗虛擬遊戲的世界更能享受揮動肢體的快感\n透過網路和世界各地的玩家來進行互動\n一起在虛擬的世界中冒險!!\nThe island of fairy story adventure\nStudent：tzu-yu chou\nWei-chi huang Adviser：zi-wei cai\nDepartment of Multimedia Design\nNational Taichung Institute of Technology\nABSTRACT In the traditional RPG game, add the interactive way of Wii.\nLet’s players not only can experience the world of virtual game, but also enjoy the feeling of waving body.\nBy internet, interacting with players all over the world, take a risk in the virtual world!!\n目錄\n中文摘要\u0026amp;hellip; i\n英文摘要\u0026amp;hellip; ii\n目錄\u0026amp;hellip; 1\n第一章 緒論\u0026amp;hellip; 2\n第一節 主題概 …","date":1230768000,"dir":"post\\00_mainTarget - Copy\\2009\\00_mainTarget{university}\\03_game\\game-project-report\\","expirydate":-62135596800,"fuzzywordcount":2700,"html":null,"keywords":["university"],"kind":"page","lang":"en","lastmod":1230768000,"objectID":"fbdecfb0f1a4ee5336ae1c561da229ff","permalink":"https://wikihuangblog.github.io/post/00_maintarget---copy/2009/00_maintargetuniversity/03_game/game-project-report/","publishdate":"2009-01-01T00:00:00Z","readingtime":6,"relpermalink":"/post/00_maintarget---copy/2009/00_maintargetuniversity/03_game/game-project-report/","section":"post","tags":["university"],"title":"game-project-report","type":"post","url":"/post/00_maintarget---copy/2009/00_maintargetuniversity/03_game/game-project-report/","weight":0,"wordcount":2616},{"author":null,"categories":null,"content":"game-project-report 他只是大學四年級做的遊戲專案。這個專案其實。就是把。書本學習的內容貫徹到底吧。當時看了什麼，看了射擊遊戲啊。然後看到那個迷宮的編輯器哦。生了2.5D的地圖啊。自行加入地圖編輯器等等的。當時深刻的體會到看過一本書，跟真正的貫徹一本書內容是完全不一樣的事情。就當時就很敬佩能夠寫書的作者，所以之後就也想要試著去寫說明文件。那也就算是。在那之後會就是決心學習輸入法，決心打字打快一點，可以打到盲打的程度。就遇到的事情之後才意識到能力不足吧，然後在去改善這樣子。\n國立台中技術學院\n多媒體設計系\n98****級專題設計與製作報告\nWii****互動與網路行銷\n互動組\n​ 學生/學號： 周子喻 14944020\n​ 黃蔚麒 14944038\n​ 指導教授： 蔡子瑋 教授\n中華民國 98 年 3 月\n童幻冒險島\n學生：周子喻 指導教授：蔡子瑋 教授\n黃蔚麒\n國立臺中技術學院多媒體設計系\n摘 要\n在傳統的RPG遊戲中，加入Wii的互動方式，讓玩家不只能體驗虛擬遊戲的世界更能享受揮動肢體的快感\n透過網路和世界各地的玩家來進行互動\n一起在虛擬的世界中冒險!!\nThe island of fairy story adventure\nStudent：tzu-yu chou\nWei-chi huang Adviser：zi-wei cai\nDepartment of Multimedia Design\nNational Taichung Institute of Technology\nABSTRACT In the traditional RPG game, add the interactive way of Wii.\nLet’s players not only can experience the world of virtual game, but also enjoy the feeling of waving body.\nBy internet, interacting with players all over the world, take a risk in the virtual world!!\n目錄\n中文摘要\u0026amp;hellip; i\n英文摘要\u0026amp;hellip; ii\n目錄\u0026amp;hellip; 1\n第一章 緒論\u0026amp;hellip; 2\n第一節 主題概 …","date":1230768000,"dir":"post\\00_mainTarget\\2009\\00_mainTarget{university}\\03_game\\game-project-report\\","expirydate":-62135596800,"fuzzywordcount":2700,"html":null,"keywords":["university"],"kind":"page","lang":"en","lastmod":1230768000,"objectID":"8d4f751762007980842f9f1dadc90a9f","permalink":"https://wikihuangblog.github.io/post/00_maintarget/2009/00_maintargetuniversity/03_game/game-project-report/","publishdate":"2009-01-01T00:00:00Z","readingtime":6,"relpermalink":"/post/00_maintarget/2009/00_maintargetuniversity/03_game/game-project-report/","section":"post","tags":["university"],"title":"game-project-report","type":"post","url":"/post/00_maintarget/2009/00_maintargetuniversity/03_game/game-project-report/","weight":0,"wordcount":2616},{"author":null,"categories":null,"content":"game tuts 是完成了遊戲專案之後啊，就很想要把每一個小部份都寫成一個。說明文件本。啊，到時會這麼想的原因是因為其實我覺得一個大專案當中其實有很多小部分。然後我如果不把他解釋過一遍的話，我就連我自己都會忘記。所以就試著去描述自己的了解。你看那個小小的簡單的遊戲要把它分割為這麼多部分。益航都做解釋了。當時就沒好像都要做解釋了。當時就買義航都要做解釋啊。當時就每一段程序代碼都要做解釋了。而現在的話，倒是只要你把程序整理好，AI就可以幫你說明了。不過也多虧了那一段經驗啊，才有辦法就是。提升自己的表達能力哦。因為黑暗雖然很萬能，但是。你也要有能力去表達你想要表達的東西一定要聽得懂，他才能夠做出。你想要做出來的東西，你要表達的出來才可以。\n基礎產生敵人\n現在，這一刻將會教你如何自動的產生敵人\nMain.fla\n看”script”圖層\n2\n我們從script class得到一個影片片段，那麼我們是如何得到它的呢?\nScript.as\n45\nFunction importSteps\n載這函式中，主要的工作便是產生一個包含全部敵人資料的陣列，我使用”stepArr”來代表他。\nstepArr[0]=(30(出現的時間), \u0026amp;ldquo;compMtr_q\u0026amp;rdquo;(怪物的名稱),\n(stageWH.w)+20(敵人出現的X座標),100(敵人出現的Y座標))\n很好，在這個範例中我只產生了3個敵人，現在看看如何使用stepArr來產生敵人。\n62\nFunction main(e:TimerEvent)\n這函式是使用timerEvent，\n所以他會被不斷的執行\n65\n當stepArr陣列不是空值時，他會執行函式checkStep();\n71\nFunction checkStep()\n在這函式，我們會取得stepArr的資料，從第一筆到最後一筆\n77\nStep[0]代表敵人被安排出現的時間\nThis.nowStep 是遊戲中的計數器\n執行過程如下圖\n圖1:時間尚未開始計時。\n圖2:時間到怪物0的出場時間。\n圖3:時間到怪物1的出場時間。\n陣列stepArr的怪物資料將會被傳送到此函式\nenemy_obj.createNew(怪物的名稱)\n81\n就像圖片所示，你將會發現在傳送完一筆資料後，我將會使用splice來刪除掉已經被發送的資料，因為它已經在也不會被使用了。 …","date":1230768000,"dir":"post\\00_mainTarget - Copy\\2009\\00_mainTarget{university}\\03_game\\game-tuts\\","expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":["university"],"kind":"page","lang":"en","lastmod":1230768000,"objectID":"4faa2d227616fc5cdde2db5855eb2e3b","permalink":"https://wikihuangblog.github.io/post/00_maintarget---copy/2009/00_maintargetuniversity/03_game/game-tuts/","publishdate":"2009-01-01T00:00:00Z","readingtime":3,"relpermalink":"/post/00_maintarget---copy/2009/00_maintargetuniversity/03_game/game-tuts/","section":"post","tags":["university"],"title":"game-tuts","type":"post","url":"/post/00_maintarget---copy/2009/00_maintargetuniversity/03_game/game-tuts/","weight":0,"wordcount":1083},{"author":null,"categories":null,"content":"game tuts 是完成了遊戲專案之後啊，就很想要把每一個小部份都寫成一個。說明文件本。啊，到時會這麼想的原因是因為其實我覺得一個大專案當中其實有很多小部分。然後我如果不把他解釋過一遍的話，我就連我自己都會忘記。所以就試著去描述自己的了解。你看那個小小的簡單的遊戲要把它分割為這麼多部分。益航都做解釋了。當時就沒好像都要做解釋了。當時就買義航都要做解釋啊。當時就每一段程序代碼都要做解釋了。而現在的話，倒是只要你把程序整理好，AI就可以幫你說明了。不過也多虧了那一段經驗啊，才有辦法就是。提升自己的表達能力哦。因為黑暗雖然很萬能，但是。你也要有能力去表達你想要表達的東西一定要聽得懂，他才能夠做出。你想要做出來的東西，你要表達的出來才可以。\n基礎產生敵人\n現在，這一刻將會教你如何自動的產生敵人\nMain.fla\n看”script”圖層\n2\n我們從script class得到一個影片片段，那麼我們是如何得到它的呢?\nScript.as\n45\nFunction importSteps\n載這函式中，主要的工作便是產生一個包含全部敵人資料的陣列，我使用”stepArr”來代表他。\nstepArr[0]=(30(出現的時間), \u0026amp;ldquo;compMtr_q\u0026amp;rdquo;(怪物的名稱),\n(stageWH.w)+20(敵人出現的X座標),100(敵人出現的Y座標))\n很好，在這個範例中我只產生了3個敵人，現在看看如何使用stepArr來產生敵人。\n62\nFunction main(e:TimerEvent)\n這函式是使用timerEvent，\n所以他會被不斷的執行\n65\n當stepArr陣列不是空值時，他會執行函式checkStep();\n71\nFunction checkStep()\n在這函式，我們會取得stepArr的資料，從第一筆到最後一筆\n77\nStep[0]代表敵人被安排出現的時間\nThis.nowStep 是遊戲中的計數器\n執行過程如下圖\n圖1:時間尚未開始計時。\n圖2:時間到怪物0的出場時間。\n圖3:時間到怪物1的出場時間。\n陣列stepArr的怪物資料將會被傳送到此函式\nenemy_obj.createNew(怪物的名稱)\n81\n就像圖片所示，你將會發現在傳送完一筆資料後，我將會使用splice來刪除掉已經被發送的資料，因為它已經在也不會被使用了。 …","date":1230768000,"dir":"post\\00_mainTarget\\2009\\00_mainTarget{university}\\03_game\\game-tuts\\","expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":["university"],"kind":"page","lang":"en","lastmod":1230768000,"objectID":"88e53c138f2e2a6c01672fc0a82bd592","permalink":"https://wikihuangblog.github.io/post/00_maintarget/2009/00_maintargetuniversity/03_game/game-tuts/","publishdate":"2009-01-01T00:00:00Z","readingtime":3,"relpermalink":"/post/00_maintarget/2009/00_maintargetuniversity/03_game/game-tuts/","section":"post","tags":["university"],"title":"game-tuts","type":"post","url":"/post/00_maintarget/2009/00_maintargetuniversity/03_game/game-tuts/","weight":0,"wordcount":1083},{"author":null,"categories":null,"content":"學歷 國立臺中科技大學\n資訊網路與多媒體研究所碩士畢業\n工作經驗 總年資\n1~2年工作經歷\n產學合作-編程助理\n資通電腦（電腦軟體服務業 100~500人）\n其他資訊專業人員台中市北區\n2010/3~2011/2 1年\n負責e管家進階版的程式測試與修改、系統的除錯 編程助理\n台中科大校務資訊組（其它軟體及網路相關業 1~30人）\n軟體工程師台中市北區\n2009/8~2010/3 8個月\n負責線上報名系統的分析、設計、程式撰寫 擅長工具 程式設計類：python\r中╱英文打字：英文打字40~50 工作技能\n軟體程式設計 證照 toeic-690\nTQC-OA -英文輸入\n自傳 **您好，我是黃蔚麒，朋友們都叫我Wiki。\n我是一位擅長Python程式設計、具備良好英文讀寫能力與電腦文書處理技能的碩士生。我深信，將專業與熱情融入生活，才能持續成長與創新。以下將與您分享我的學習軌跡與個人特質。\n一、專業技能與專案實績\n在研究所期間，我積極將所學應用於實務專案中，累積了寶貴的協作與問題解決經驗。\n網路志願報名系統： 在指導教授的帶領下，我參與開發了此一系統。該系統成功優化了招生流程，為學校節省了可觀的人力與時間成本。 與資通電腦合作之「e管家」系統： 在此合作案中，我協助開發能協助民眾便捷獲取政府資訊的系統，進一步理解了如何以技術服務公眾需求。 這些經驗不僅鍛鍊了我的Python程式能力，更讓我學會從使用者的角度思考，打造出真正能解決問題的方案。\n二、語言與技術應用能力\n我習慣使用英文來撰寫學習筆記與技術文件，這項習慣帶來兩大優勢：\n讓我能與國際上的技術資訊無縫接軌，持續拓展視野。 在與AI協作（例如提問、除錯或生成程式碼）時，能夠進行更精確、順暢的溝通，大幅提升工作效率。 此外，撰寫碩士論文的經驗，讓我深刻理解到格式規範的重要性。與其手動逐項調整，我更傾向運用程式設計能力（如Python腳本）來實現文件排版的自動化，這確保了文件的最終品質，同時也將我從重複性的文書作業中解放，能更專注於內容本身。\n三、自律生活與問題解決思維\n我相信，持續學習是進步的動力，而健康的身心則是這一切的基礎。\n壓力管理與健康維持： 當學習或工作感到疲憊時，我喜歡透過跑步或騎單車來轉換心情。這個習慣不僅能讓我的思緒更清晰，也維持了良好的體能狀態，讓我能以飽滿的精神面對挑戰。 DIY精神與工具思維：  …","date":-62135596800,"dir":"about\\","expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"https://wikihuangblog.github.io/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/about/","section":"","tags":null,"title":"","type":"page","url":"/about/","weight":0,"wordcount":1119},{"author":null,"categories":null,"content":"Go 语言学习笔记 Envoy 学习笔记 ","date":-62135596800,"dir":"notes\\","expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"1ede8046f9c3a02d422dea7bbf324e64","permalink":"https://wikihuangblog.github.io/notes/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/notes/","section":"","tags":null,"title":"","type":"page","url":"/notes/","weight":0,"wordcount":12},{"author":null,"categories":null,"content":"","date":-62135596800,"dir":"archive\\","expirydate":-62135596800,"fuzzywordcount":100,"html":"Archive of historical posts.","keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a06e5ce9eca4c3260843078104889780","permalink":"https://wikihuangblog.github.io/archive/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/archive/","section":"","tags":null,"title":"Posts Archive","type":"archive","url":"/archive/","weight":0,"wordcount":0}]