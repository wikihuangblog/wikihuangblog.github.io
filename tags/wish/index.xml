<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wish on wikihuang Blog</title>
    <link>https://wikihuangblog.github.io/tags/wish/</link>
    <description>Recent content in Wish on wikihuang Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jan 2010 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://wikihuangblog.github.io/tags/wish/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>wishCase</title>
      <link>https://wikihuangblog.github.io/post/00_maintarget/2010/00_maintargetbirdwish/wishcase/</link>
      <pubDate>Fri, 01 Jan 2010 00:00:00 +0000</pubDate>
      <guid>https://wikihuangblog.github.io/post/00_maintarget/2010/00_maintargetbirdwish/wishcase/</guid>
      <description>&lt;h1 id=&#34;四技二專志願表系統&#34;&gt;四技二專志願表系統&lt;/h1&gt;&#xA;&lt;p&gt;這是2010年的紀錄，那時剛進入研究所第一年。當時第一個專案就是要做一個志願表，當時有四技二專的招商系統，然後要做一個前端的報名界面。當時老師給我一個用到資料庫的鳥類觀察記錄範例，然後用相同的程序結構，去研究資料庫怎麼用，包括結構、欄位等等，一樣畫葫蘆。那也是有史以來第一次認識什麼叫大專案，每個程序的模組要依序放在什麼位置，然後有架構地去組成一個專案，並且也要去研究一些邏輯，研究不同身份（一般的學生或特殊的學生，或者有多重身份等）要怎麼樣去報名不一樣的學校。當時還沒有這麼好的版本控制工具，所以每個小部分就是一個小檔案。這個方法放到現代來說，如果你有好的檔案比對工具，一樣有不錯的效果。我在之後就完成了一些它的順序圖、流程圖等等，要把當初專案的架構整理出來。在現代的話，可以透過AI的技術，讓架構變得更加明確了。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
